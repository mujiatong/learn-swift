From: <Saved by Blink>
Snapshot-Content-Location: https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html
Subject: =?utf-8?Q?Collection=20Types=20=E2=80=94=20The=20Swift=20Programming=20La?=
 =?utf-8?Q?nguage=20(Swift=205.1)?=
Date: Tue, 20 Aug 2019 00:54:28 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----"


------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: text/html
Content-ID: <frame-F1E52A7A9AAABE13E9F05B62DD249870@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html

<!DOCTYPE html><html class=3D"  ext-strict"><head><meta http-equiv=3D"Conte=
nt-Type" content=3D"text/html; charset=3DUTF-8">
   =20
    <meta name=3D"author" content=3D"Apple Inc.">
    <meta name=3D"viewport" content=3D"width=3Ddevice-width initial-scale=
=3D1">
   =20
    <title>Collection Types =E2=80=94 The Swift Programming Language (Swift=
 5.1)</title>
   =20
    <link rel=3D"license" href=3D"https://docs.swift.org/LICENSE.txt">
    <link rel=3D"stylesheet" media=3D"all" href=3D"https://docs.swift.org/s=
wift-book/_static/stylesheets/application.css">
    <link rel=3D"stylesheet" media=3D"all" href=3D"https://docs.swift.org/s=
wift-book/_static/stylesheets/tspl.css">
    <link rel=3D"shortcut icon" sizes=3D"16x16 24x24 32x32 48x48 64x64" typ=
e=3D"image/vnd.microsoft.icon" href=3D"https://docs.swift.org/favicon.ico">
    <link rel=3D"apple-touch-icon" href=3D"https://docs.swift.org/apple-tou=
ch-icon.png">
    <link rel=3D"apple-touch-icon" sizes=3D"57x57" href=3D"https://docs.swi=
ft.org/apple-touch-icon-57x57.png">
    <link rel=3D"apple-touch-icon" sizes=3D"72x72" href=3D"https://docs.swi=
ft.org/apple-touch-icon-72x72.png">
    <link rel=3D"apple-touch-icon" sizes=3D"76x76" href=3D"https://docs.swi=
ft.org/apple-touch-icon-76x76.png">
    <link rel=3D"apple-touch-icon" sizes=3D"114x114" href=3D"https://docs.s=
wift.org/apple-touch-icon-114x114.png">
    <link rel=3D"apple-touch-icon" sizes=3D"120x120" href=3D"https://docs.s=
wift.org/apple-touch-icon-120x120.png">
    <link rel=3D"apple-touch-icon" sizes=3D"144x144" href=3D"https://docs.s=
wift.org/apple-touch-icon-144x144.png">
    <link rel=3D"apple-touch-icon" sizes=3D"152x152" href=3D"https://docs.s=
wift.org/apple-touch-icon-152x152.png">
    <link rel=3D"apple-touch-icon" sizes=3D"180x180" href=3D"https://docs.s=
wift.org/apple-touch-icon-180x180.png">
    <link rel=3D"mask-icon" href=3D"https://docs.swift.org/assets/images/ic=
on-swift.svg" color=3D"#F05339">=20
  <style>img.chromoji { width:1.2em !important; height:1.2em !important; }.=
chromoji-font, #chromoji-font { font-size:1.2em !important; }</style></head=
>
  <body class=3D" ext-webkit ext-chrome" id=3D"syno-nsc-ext-gen3">


<nav role=3D"navigation">
    <header role=3D"banner">
      <h1 id=3D"logo">
        <a href=3D"https://swift.org/" title=3D"Swift.org" role=3D"img" ari=
a-label=3D"Swift.org">
          Swift.org
        </a>
      </h1>
    </header>

    <div id=3D"menu-toggle" class=3D"menu-toggle open"></div>

    <h2>The Swift Programming Language<div>Swift 5.1</div></h2>

    <ul>
    <ul class=3D"current">
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/">Welcome to Swift</a></li>
<li class=3D"toctree-l1 current"><a class=3D"reference internal" href=3D"ht=
tps://docs.swift.org/swift-book/LanguageGuide/TheBasics.html">Language Guid=
e</a><ul class=3D"current">
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/TheBasics.html">The Basics</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/BasicOperators.html">Basic Operators<=
/a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html">Strings an=
d Characters</a></li>
<li class=3D"toctree-l2 current"><a class=3D"current reference internal" hr=
ef=3D"https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#=
">Collection Types</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/ControlFlow.html">Control Flow</a></l=
i>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Functions.html">Functions</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Closures.html">Closures</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Enumerations.html">Enumeration</a></l=
i>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/ClassesAndStructures.html">Structures=
 and Classes</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Properties.html">Properties</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Methods.html">Methods</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Subscripts.html">Subscripts</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Inheritance.html">Inheritance</a></li=
>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Initialization.html">Initialization</=
a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Deinitialization.html">Deinitializati=
on</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/OptionalChaining.html">Optional Chain=
ing</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/ErrorHandling.html">Error Handling</a=
></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/TypeCasting.html">Type Casting</a></l=
i>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/NestedTypes.html">Nested Types</a></l=
i>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Extensions.html">Extensions</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Protocols.html">Protocols</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/Generics.html">Generics</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/OpaqueTypes.html">Opaque Types</a></l=
i>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html">Auto=
matic Reference Counting</a></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/MemorySafety.html">Memory Safety</a><=
/li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/AccessControl.html">Access Control</a=
></li>
<li class=3D"toctree-l2"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html">Advanced Oper=
ators</a></li>
</ul>
</li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/ReferenceManual/AboutTheLanguageReference.html">Lan=
guage Reference</a></li>
<li class=3D"toctree-l1"><a class=3D"reference internal" href=3D"https://do=
cs.swift.org/swift-book/RevisionHistory/RevisionHistory.html">Revision Hist=
ory</a></li>
</ul>

    <li class=3D"toctree-l1 return"><a class=3D"reference internal" href=3D=
"https://swift.org/">=E2=86=90 Return to Swift.org</a></li>
    </ul>
</nav>




<main role=3D"main">
    <article class=3D"page">
        <menu id=3D"bashful" type=3D"toolbar">
          <div class=3D"inner">
            <menuitem id=3D"jump_to" class=3D"menu-bar-item closed">
            <span id=3D"jump_to_toggle">On This Page</span>
            <div class=3D"chevron">
                <div class=3D"chevy chevron-left"></div>
                <div class=3D"chevy chevron-right"></div>
            </div>
            <menu type=3D"list" class=3D"details">
                <ul>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#">Collection Types</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID106">Mutability of Collections</a><=
/li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID107">Arrays</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID108">Array Type Shorthand Syntax</a=
></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID500">Creating an Empty Array</a></l=
i>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID501">Creating an Array with a Defau=
lt Value</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID502">Creating an Array by Adding Tw=
o Arrays Together</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID109">Creating an Array with an Arra=
y Literal</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID110">Accessing and Modifying an Arr=
ay</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID111">Iterating Over an Array</a></l=
i>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID484">Sets</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID493">Hash Values for Set Types</a><=
/li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID485">Set Type Syntax</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID503">Creating and Initializing an E=
mpty Set</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID504">Creating a Set with an Array L=
iteral</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID488">Accessing and Modifying a Set<=
/a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID489">Iterating Over a Set</a></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID490">Performing Set Operations</a><=
ul>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID505">Fundamental Set Operations</a>=
</li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID506">Set Membership and Equality</a=
></li>
</ul>
</li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID113">Dictionaries</a><ul>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID114">Dictionary Type Shorthand Synt=
ax</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID118">Creating an Empty Dictionary</=
a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID507">Creating a Dictionary with a D=
ictionary Literal</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID116">Accessing and Modifying a Dict=
ionary</a></li>
<li><a class=3D"reference internal" href=3D"https://docs.swift.org/swift-bo=
ok/LanguageGuide/CollectionTypes.html#ID117">Iterating Over a Dictionary</a=
></li>
</ul>
</li>
</ul>
</li>
</ul>

            </menu>
            </menuitem>
          </div>
        </menu>

       =20
  <div class=3D"section" id=3D"collection-types">
<h1>Collection Types<a class=3D"headerlink" href=3D"https://docs.swift.org/=
swift-book/LanguageGuide/CollectionTypes.html#collection-types" title=3D"Pe=
rmalink to this headline">=C2=B6</a></h1>
<p>Swift provides three primary <em>collection types</em>, known as arrays,=
 sets, and dictionaries, for storing collections of values. Arrays are orde=
red collections of values. Sets are unordered collections of unique values.=
 Dictionaries are unordered collections of key-value associations.</p>
<img alt=3D"../_images/CollectionTypes_intro_2x.png" class=3D"align-center"=
 src=3D"https://docs.swift.org/swift-book/_images/CollectionTypes_intro_2x.=
png" style=3D"width: 670px;">
<p>Arrays, sets, and dictionaries in Swift are always clear about the types=
 of values and keys that they can store. This means that you cannot insert =
a value of the wrong type into a collection by mistake. It also means you c=
an be confident about the type of values you will retrieve from a collectio=
n.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">Swift=E2=80=99s array, set, and dictionary types are impl=
emented as <em>generic collections</em>. For more about generic types and c=
ollections, see <a class=3D"reference internal" href=3D"https://docs.swift.=
org/swift-book/LanguageGuide/Generics.html"><span class=3D"doc">Generics</s=
pan></a>.</p>
</div>
<div class=3D"section" id=3D"ID106">
<h2>Mutability of Collections<a class=3D"headerlink" href=3D"https://docs.s=
wift.org/swift-book/LanguageGuide/CollectionTypes.html#ID106" title=3D"Perm=
alink to this headline">=C2=B6</a></h2>
<p>If you create an array, a set, or a dictionary, and assign it to a varia=
ble, the collection that is created will be <em>mutable</em>. This means th=
at you can change (or <em>mutate</em>) the collection after it=E2=80=99s cr=
eated by adding, removing, or changing items in the collection. If you assi=
gn an array, a set, or a dictionary to a constant, that collection is <em>i=
mmutable</em>, and its size and contents cannot be changed.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">It is good practice to create immutable collections in al=
l cases where the collection does not need to change. Doing so makes it eas=
ier for you to reason about your code and enables the Swift compiler to opt=
imize the performance of the collections you create.</p>
</div>
</div>
<div class=3D"section" id=3D"ID107">
<h2>Arrays<a class=3D"headerlink" href=3D"https://docs.swift.org/swift-book=
/LanguageGuide/CollectionTypes.html#ID107" title=3D"Permalink to this headl=
ine">=C2=B6</a></h2>
<p>An <em>array</em> stores values of the same type in an ordered list. The=
 same value can appear in an array multiple times at different positions.</=
p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p>Swift=E2=80=99s <code class=3D"docutils literal notranslate"><span class=
=3D"pre">Array</span></code> type is bridged to Foundation=E2=80=99s <code =
class=3D"docutils literal notranslate"><span class=3D"pre">NSArray</span></=
code> class.</p>
<p class=3D"last">For more information about using <code class=3D"docutils =
literal notranslate"><span class=3D"pre">Array</span></code> with Foundatio=
n and Cocoa, see <a class=3D"reference external" href=3D"https://developer.=
apple.com/documentation/swift/array#2846730">Bridging Between Array and NSA=
rray</a>.</p>
</div>
<div class=3D"section" id=3D"ID108">
<h3>Array Type Shorthand Syntax<a class=3D"headerlink" href=3D"https://docs=
.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID108" title=3D"Pe=
rmalink to this headline">=C2=B6</a></h3>
<p>The type of a Swift array is written in full as <code class=3D"docutils =
literal notranslate"><span class=3D"pre">Array&lt;Element&gt;</span></code>=
, where <code class=3D"docutils literal notranslate"><span class=3D"pre">El=
ement</span></code> is the type of values the array is allowed to store. Yo=
u can also write the type of an array in shorthand form as <code class=3D"d=
ocutils literal notranslate"><span class=3D"pre">[Element]</span></code>. A=
lthough the two forms are functionally identical, the shorthand form is pre=
ferred and is used throughout this guide when referring to the type of an a=
rray.</p>
</div>
<div class=3D"section" id=3D"ID500">
<h3>Creating an Empty Array<a class=3D"headerlink" href=3D"https://docs.swi=
ft.org/swift-book/LanguageGuide/CollectionTypes.html#ID500" title=3D"Permal=
ink to this headline">=C2=B6</a></h3>
<p>You can create an empty array of a certain type using initializer syntax=
:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">someInts</span> =3D [<span class=3D"nv">Int</sp=
an>]()
</li><li><span class=3D"nv">print</span>(<span class=3D"s">"someInts is of =
type [Int] with </span>\<span class=3D"p">(</span><span class=3D"nv">someIn=
ts</span>.<span class=3D"nv">count</span><span class=3D"p">)</span><span cl=
ass=3D"s"> items."</span>)
</li><li><span class=3D"c">// Prints "someInts is of type [Int] with 0 item=
s."</span>
</li></ol></div></div></div>
<p>Note that the type of the <code class=3D"docutils literal notranslate"><=
span class=3D"pre">someInts</span></code> variable is inferred to be <code =
class=3D"docutils literal notranslate"><span class=3D"pre">[Int]</span></co=
de> from the type of the initializer.</p>
<p>Alternatively, if the context already provides type information, such as=
 a function argument or an already typed variable or constant, you can crea=
te an empty array with an empty array literal, which is written as <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">[]</span></code> (=
an empty pair of square brackets):</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">s=
omeInts</span>.<span class=3D"nv">append</span>(<span class=3D"m">3</span>)
</li><li><span class=3D"c">// someInts now contains 1 value of type Int</sp=
an>
</li><li><span class=3D"nv">someInts</span> =3D []
</li><li><span class=3D"c">// someInts is now an empty array, but is still =
of type [Int]</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID501">
<h3>Creating an Array with a Default Value<a class=3D"headerlink" href=3D"h=
ttps://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID501" =
title=3D"Permalink to this headline">=C2=B6</a></h3>
<p>Swift=E2=80=99s <code class=3D"docutils literal notranslate"><span class=
=3D"pre">Array</span></code> type also provides an initializer for creating=
 an array of a certain size with all of its values set to the same default =
value. You pass this initializer a default value of the appropriate type (c=
alled <code class=3D"docutils literal notranslate"><span class=3D"pre">repe=
ating</span></code>): and the number of times that value is repeated in the=
 new array (called <code class=3D"docutils literal notranslate"><span class=
=3D"pre">count</span></code>):</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">threeDoubles</span> =3D <span class=3D"nv">Arra=
y</span>(<span class=3D"nv">repeating</span>: <span class=3D"m">0.0</span>,=
 <span class=3D"nv">count</span>: <span class=3D"m">3</span>)
</li><li><span class=3D"c">// threeDoubles is of type [Double], and equals =
[0.0, 0.0, 0.0]</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID502">
<h3>Creating an Array by Adding Two Arrays Together<a class=3D"headerlink" =
href=3D"https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.htm=
l#ID502" title=3D"Permalink to this headline">=C2=B6</a></h3>
<p>You can create a new array by adding together two existing arrays with c=
ompatible types with the addition operator (<code class=3D"docutils literal=
 notranslate"><span class=3D"pre">+</span></code>). The new array=E2=80=99s=
 type is inferred from the type of the two arrays you add together:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">anotherThreeDoubles</span> =3D <span class=3D"n=
v">Array</span>(<span class=3D"nv">repeating</span>: <span class=3D"m">2.5<=
/span>, <span class=3D"nv">count</span>: <span class=3D"m">3</span>)
</li><li><span class=3D"c">// anotherThreeDoubles is of type [Double], and =
equals [2.5, 2.5, 2.5]</span>
</li><li>
</li><li><span class=3D"k">var</span> <span class=3D"nv">sixDoubles</span> =
=3D <span class=3D"nv">threeDoubles</span> + <span class=3D"nv">anotherThre=
eDoubles</span>
</li><li><span class=3D"c">// sixDoubles is inferred as [Double], and equal=
s [0.0, 0.0, 0.0, 2.5, 2.5, 2.5]</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID109">
<h3>Creating an Array with an Array Literal<a class=3D"headerlink" href=3D"=
https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID109"=
 title=3D"Permalink to this headline">=C2=B6</a></h3>
<p>You can also initialize an array with an <em>array literal</em>, which i=
s a shorthand way to write one or more values as an array collection. An ar=
ray literal is written as a list of values, separated by commas, surrounded=
 by a pair of square brackets:</p>
<div class=3D"syntax-outline highlight-swift notranslate"><div class=3D"cod=
e-sample"><div class=3D"Swift highlight"><ol class=3D"code-lines"><li>[<spa=
n class=3D"gi">value 1</span>, <span class=3D"gi">value 2</span>, <span cla=
ss=3D"gi">value 3</span>]
</li></ol></div></div></div>
<p>The example below creates an array called <code class=3D"docutils litera=
l notranslate"><span class=3D"pre">shoppingList</span></code> to store <cod=
e class=3D"docutils literal notranslate"><span class=3D"pre">String</span><=
/code> values:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">shoppingList</span>: [<span class=3D"nc">String=
</span>] =3D [<span class=3D"s">"Eggs"</span>, <span class=3D"s">"Milk"</sp=
an>]
</li><li><span class=3D"c">// shoppingList has been initialized with two in=
itial items</span>
</li></ol></div></div></div>
<p>The <code class=3D"docutils literal notranslate"><span class=3D"pre">sho=
ppingList</span></code> variable is declared as =E2=80=9Can array of string=
 values=E2=80=9D, written as <code class=3D"docutils literal notranslate"><=
span class=3D"pre">[String]</span></code>. Because this particular array ha=
s specified a value type of <code class=3D"docutils literal notranslate"><s=
pan class=3D"pre">String</span></code>, it is allowed to store <code class=
=3D"docutils literal notranslate"><span class=3D"pre">String</span></code> =
values only. Here, the <code class=3D"docutils literal notranslate"><span c=
lass=3D"pre">shoppingList</span></code> array is initialized with two <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">String</span></=
code> values (<code class=3D"docutils literal notranslate"><span class=3D"p=
re">"Eggs"</span></code> and <code class=3D"docutils literal notranslate"><=
span class=3D"pre">"Milk"</span></code>), written within an array literal.<=
/p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">The <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">shoppingList</span></code> array is declared as a variable (wit=
h the <code class=3D"docutils literal notranslate"><span class=3D"pre">var<=
/span></code> introducer) and not a constant (with the <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">let</span></code> introducer) =
because more items are added to the shopping list in the examples below.</p=
>
</div>
<p>In this case, the array literal contains two <code class=3D"docutils lit=
eral notranslate"><span class=3D"pre">String</span></code> values and nothi=
ng else. This matches the type of the <code class=3D"docutils literal notra=
nslate"><span class=3D"pre">shoppingList</span></code> variable=E2=80=99s d=
eclaration (an array that can only contain <code class=3D"docutils literal =
notranslate"><span class=3D"pre">String</span></code> values), and so the a=
ssignment of the array literal is permitted as a way to initialize <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">shoppingList</span=
></code> with two initial items.</p>
<p>Thanks to Swift=E2=80=99s type inference, you don=E2=80=99t have to writ=
e the type of the array if you=E2=80=99re initializing it with an array lit=
eral containing values of the same type. The initialization of <code class=
=3D"docutils literal notranslate"><span class=3D"pre">shoppingList</span></=
code> could have been written in a shorter form instead:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">shoppingList</span> =3D [<span class=3D"s">"Egg=
s"</span>, <span class=3D"s">"Milk"</span>]
</li></ol></div></div></div>
<p>Because all values in the array literal are of the same type, Swift can =
infer that <code class=3D"docutils literal notranslate"><span class=3D"pre"=
>[String]</span></code> is the correct type to use for the <code class=3D"d=
ocutils literal notranslate"><span class=3D"pre">shoppingList</span></code>=
 variable.</p>
</div>
<div class=3D"section" id=3D"ID110">
<h3>Accessing and Modifying an Array<a class=3D"headerlink" href=3D"https:/=
/docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID110" title=
=3D"Permalink to this headline">=C2=B6</a></h3>
<p>You access and modify an array through its methods and properties, or by=
 using subscript syntax.</p>
<p>To find out the number of items in an array, check its read-only <code c=
lass=3D"docutils literal notranslate"><span class=3D"pre">count</span></cod=
e> property:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">p=
rint</span>(<span class=3D"s">"The shopping list contains </span>\<span cla=
ss=3D"p">(</span><span class=3D"nv">shoppingList</span>.<span class=3D"nv">=
count</span><span class=3D"p">)</span><span class=3D"s"> items."</span>)
</li><li><span class=3D"c">// Prints "The shopping list contains 2 items."<=
/span>
</li></ol></div></div></div>
<p>Use the Boolean <code class=3D"docutils literal notranslate"><span class=
=3D"pre">isEmpty</span></code> property as a shortcut for checking whether =
the <code class=3D"docutils literal notranslate"><span class=3D"pre">count<=
/span></code> property is equal to <code class=3D"docutils literal notransl=
ate"><span class=3D"pre">0</span></code>:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">if=
</span> <span class=3D"nv">shoppingList</span>.<span class=3D"nv">isEmpty</=
span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"The shoppin=
g list is empty."</span>)
</li><li>} <span class=3D"k">else</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"The shoppin=
g list is not empty."</span>)
</li><li>}
</li><li><span class=3D"c">// Prints "The shopping list is not empty."</spa=
n>
</li></ol></div></div></div>
<p>You can add a new item to the end of an array by calling the array=E2=80=
=99s <code class=3D"docutils literal notranslate"><span class=3D"pre">appen=
d(_:)</span></code> method:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">s=
hoppingList</span>.<span class=3D"nv">append</span>(<span class=3D"s">"Flou=
r"</span>)
</li><li><span class=3D"c">// shoppingList now contains 3 items, and someon=
e is making pancakes</span>
</li></ol></div></div></div>
<p>Alternatively, append an array of one or more compatible items with the =
addition assignment operator (<code class=3D"docutils literal notranslate">=
<span class=3D"pre">+=3D</span></code>):</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">s=
hoppingList</span> +=3D [<span class=3D"s">"Baking Powder"</span>]
</li><li><span class=3D"c">// shoppingList now contains 4 items</span>
</li><li><span class=3D"nv">shoppingList</span> +=3D [<span class=3D"s">"Ch=
ocolate Spread"</span>, <span class=3D"s">"Cheese"</span>, <span class=3D"s=
">"Butter"</span>]
</li><li><span class=3D"c">// shoppingList now contains 7 items</span>
</li></ol></div></div></div>
<p>Retrieve a value from the array by using <em>subscript syntax</em>, pass=
ing the index of the value you want to retrieve within square brackets imme=
diately after the name of the array:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">firstItem</span> =3D <span class=3D"nv">shoppin=
gList</span>[<span class=3D"m">0</span>]
</li><li><span class=3D"c">// firstItem is equal to "Eggs"</span>
</li></ol></div></div></div>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">The first item in the array has an index of <code class=
=3D"docutils literal notranslate"><span class=3D"pre">0</span></code>, not =
<code class=3D"docutils literal notranslate"><span class=3D"pre">1</span></=
code>. Arrays in Swift are always zero-indexed.</p>
</div>
<p>You can use subscript syntax to change an existing value at a given inde=
x:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">s=
hoppingList</span>[<span class=3D"m">0</span>] =3D <span class=3D"s">"Six e=
ggs"</span>
</li><li><span class=3D"c">// the first item in the list is now equal to "S=
ix eggs" rather than "Eggs"</span>
</li></ol></div></div></div>
<p>When you use subscript syntax, the index you specify needs to be valid. =
For example, writing <code class=3D"docutils literal notranslate"><span cla=
ss=3D"pre">shoppingList[shoppingList.count]</span> <span class=3D"pre">=3D<=
/span> <span class=3D"pre">"Salt"</span></code> to try to append an item to=
 the end of the array results in a runtime error.</p>
<p>You can also use subscript syntax to change a range of values at once, e=
ven if the replacement set of values has a different length than the range =
you are replacing. The following example replaces <code class=3D"docutils l=
iteral notranslate"><span class=3D"pre">"Chocolate</span> <span class=3D"pr=
e">Spread"</span></code>, <code class=3D"docutils literal notranslate"><spa=
n class=3D"pre">"Cheese"</span></code>, and <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">"Butter"</span></code> with <code class=
=3D"docutils literal notranslate"><span class=3D"pre">"Bananas"</span></cod=
e> and <code class=3D"docutils literal notranslate"><span class=3D"pre">"Ap=
ples"</span></code>:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">s=
hoppingList</span>[<span class=3D"m">4</span>...<span class=3D"m">6</span>]=
 =3D [<span class=3D"s">"Bananas"</span>, <span class=3D"s">"Apples"</span>=
]
</li><li><span class=3D"c">// shoppingList now contains 6 items</span>
</li></ol></div></div></div>
<p>To insert an item into the array at a specified index, call the array=E2=
=80=99s <code class=3D"docutils literal notranslate"><span class=3D"pre">in=
sert(_:at:)</span></code> method:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">s=
hoppingList</span>.<span class=3D"nv">insert</span>(<span class=3D"s">"Mapl=
e Syrup"</span>, <span class=3D"nv">at</span>: <span class=3D"m">0</span>)
</li><li><span class=3D"c">// shoppingList now contains 7 items</span>
</li><li><span class=3D"c">// "Maple Syrup" is now the first item in the li=
st</span>
</li></ol></div></div></div>
<p>This call to the <code class=3D"docutils literal notranslate"><span clas=
s=3D"pre">insert(_:at:)</span></code> method inserts a new item with a valu=
e of <code class=3D"docutils literal notranslate"><span class=3D"pre">"Mapl=
e</span> <span class=3D"pre">Syrup"</span></code> at the very beginning of =
the shopping list, indicated by an index of <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">0</span></code>.</p>
<p>Similarly, you remove an item from the array with the <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">remove(at:)</span></code> me=
thod. This method removes the item at the specified index and returns the r=
emoved item (although you can ignore the returned value if you do not need =
it):</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">le=
t</span> <span class=3D"nv">mapleSyrup</span> =3D <span class=3D"nv">shoppi=
ngList</span>.<span class=3D"nv">remove</span>(<span class=3D"nv">at</span>=
: <span class=3D"m">0</span>)
</li><li><span class=3D"c">// the item that was at index 0 has just been re=
moved</span>
</li><li><span class=3D"c">// shoppingList now contains 6 items, and no Map=
le Syrup</span>
</li><li><span class=3D"c">// the mapleSyrup constant is now equal to the r=
emoved "Maple Syrup" string</span>
</li></ol></div></div></div>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">If you try to access or modify a value for an index that =
is outside of an array=E2=80=99s existing bounds, you will trigger a runtim=
e error. You can check that an index is valid before using it by comparing =
it to the array=E2=80=99s <code class=3D"docutils literal notranslate"><spa=
n class=3D"pre">count</span></code> property. The largest valid index in an=
 array is <code class=3D"docutils literal notranslate"><span class=3D"pre">=
count</span> <span class=3D"pre">-</span> <span class=3D"pre">1</span></cod=
e> because arrays are indexed from zero=E2=80=94however, when <code class=
=3D"docutils literal notranslate"><span class=3D"pre">count</span></code> i=
s <code class=3D"docutils literal notranslate"><span class=3D"pre">0</span>=
</code> (meaning the array is empty), there are no valid indexes.</p>
</div>
<p>Any gaps in an array are closed when an item is removed, and so the valu=
e at index <code class=3D"docutils literal notranslate"><span class=3D"pre"=
>0</span></code> is once again equal to <code class=3D"docutils literal not=
ranslate"><span class=3D"pre">"Six</span> <span class=3D"pre">eggs"</span><=
/code>:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">f=
irstItem</span> =3D <span class=3D"nv">shoppingList</span>[<span class=3D"m=
">0</span>]
</li><li><span class=3D"c">// firstItem is now equal to "Six eggs"</span>
</li></ol></div></div></div>
<p>If you want to remove the final item from an array, use the <code class=
=3D"docutils literal notranslate"><span class=3D"pre">removeLast()</span></=
code> method rather than the <code class=3D"docutils literal notranslate"><=
span class=3D"pre">remove(at:)</span></code> method to avoid the need to qu=
ery the array=E2=80=99s <code class=3D"docutils literal notranslate"><span =
class=3D"pre">count</span></code> property. Like the <code class=3D"docutil=
s literal notranslate"><span class=3D"pre">remove(at:)</span></code> method=
, <code class=3D"docutils literal notranslate"><span class=3D"pre">removeLa=
st()</span></code> returns the removed item:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">le=
t</span> <span class=3D"nv">apples</span> =3D <span class=3D"nv">shoppingLi=
st</span>.<span class=3D"nv">removeLast</span>()
</li><li><span class=3D"c">// the last item in the array has just been remo=
ved</span>
</li><li><span class=3D"c">// shoppingList now contains 5 items, and no app=
les</span>
</li><li><span class=3D"c">// the apples constant is now equal to the remov=
ed "Apples" string</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID111">
<h3>Iterating Over an Array<a class=3D"headerlink" href=3D"https://docs.swi=
ft.org/swift-book/LanguageGuide/CollectionTypes.html#ID111" title=3D"Permal=
ink to this headline">=C2=B6</a></h3>
<p>You can iterate over the entire set of values in an array with the <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">for</span></cod=
e>-<code class=3D"docutils literal notranslate"><span class=3D"pre">in</spa=
n></code> loop:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">fo=
r</span> <span class=3D"nv">item</span> <span class=3D"k">in</span> <span c=
lass=3D"nv">shoppingList</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"nv">item</span>=
)
</li><li>}
</li><li><span class=3D"c">// Six eggs</span>
</li><li><span class=3D"c">// Milk</span>
</li><li><span class=3D"c">// Flour</span>
</li><li><span class=3D"c">// Baking Powder</span>
</li><li><span class=3D"c">// Bananas</span>
</li></ol></div></div></div>
<p>If you need the integer index of each item as well as its value, use the=
 <code class=3D"docutils literal notranslate"><span class=3D"pre">enumerate=
d()</span></code> method to iterate over the array instead. For each item i=
n the array, the <code class=3D"docutils literal notranslate"><span class=
=3D"pre">enumerated()</span></code> method returns a tuple composed of an i=
nteger and the item. The integers start at zero and count up by one for eac=
h item; if you enumerate over a whole array, these integers match the items=
=E2=80=99 indices. You can decompose the tuple into temporary constants or =
variables as part of the iteration:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">fo=
r</span> (<span class=3D"nv">index</span>, <span class=3D"nv">value</span>)=
 <span class=3D"k">in</span> <span class=3D"nv">shoppingList</span>.<span c=
lass=3D"nv">enumerated</span>() {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"Item </span=
>\<span class=3D"p">(</span><span class=3D"nv">index</span> + <span class=
=3D"m">1</span><span class=3D"p">)</span><span class=3D"s">: </span>\<span =
class=3D"p">(</span><span class=3D"nv">value</span><span class=3D"p">)</spa=
n><span class=3D"s">"</span>)
</li><li>}
</li><li><span class=3D"c">// Item 1: Six eggs</span>
</li><li><span class=3D"c">// Item 2: Milk</span>
</li><li><span class=3D"c">// Item 3: Flour</span>
</li><li><span class=3D"c">// Item 4: Baking Powder</span>
</li><li><span class=3D"c">// Item 5: Bananas</span>
</li></ol></div></div></div>
<p>For more about the <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">for</span></code>-<code class=3D"docutils literal notranslate">=
<span class=3D"pre">in</span></code> loop, see <a class=3D"reference intern=
al" href=3D"https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.htm=
l#ID121"><span class=3D"std std-ref">For-In Loops</span></a>.</p>
</div>
</div>
<div class=3D"section" id=3D"ID484">
<h2>Sets<a class=3D"headerlink" href=3D"https://docs.swift.org/swift-book/L=
anguageGuide/CollectionTypes.html#ID484" title=3D"Permalink to this headlin=
e">=C2=B6</a></h2>
<p>A <em>set</em> stores distinct values of the same type in a collection w=
ith no defined ordering. You can use a set instead of an array when the ord=
er of items is not important, or when you need to ensure that an item only =
appears once.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p>Swift=E2=80=99s <code class=3D"docutils literal notranslate"><span class=
=3D"pre">Set</span></code> type is bridged to Foundation=E2=80=99s <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">NSSet</span></code=
> class.</p>
<p class=3D"last">For more information about using <code class=3D"docutils =
literal notranslate"><span class=3D"pre">Set</span></code> with Foundation =
and Cocoa, see <a class=3D"reference external" href=3D"https://developer.ap=
ple.com/documentation/swift/set#2845530">Bridging Between Set and NSSet</a>=
.</p>
</div>
<div class=3D"section" id=3D"ID493">
<h3>Hash Values for Set Types<a class=3D"headerlink" href=3D"https://docs.s=
wift.org/swift-book/LanguageGuide/CollectionTypes.html#ID493" title=3D"Perm=
alink to this headline">=C2=B6</a></h3>
<p>A type must be <em>hashable</em> in order to be stored in a set=E2=80=94=
that is, the type must provide a way to compute a <em>hash value</em> for i=
tself. A hash value is an <code class=3D"docutils literal notranslate"><spa=
n class=3D"pre">Int</span></code> value that is the same for all objects th=
at compare equally, such that if <code class=3D"docutils literal notranslat=
e"><span class=3D"pre">a</span> <span class=3D"pre">=3D=3D</span> <span cla=
ss=3D"pre">b</span></code>, it follows that <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">a.hashValue</span> <span class=3D"pre">=
=3D=3D</span> <span class=3D"pre">b.hashValue</span></code>.</p>
<p>All of Swift=E2=80=99s basic types (such as <code class=3D"docutils lite=
ral notranslate"><span class=3D"pre">String</span></code>, <code class=3D"d=
ocutils literal notranslate"><span class=3D"pre">Int</span></code>, <code c=
lass=3D"docutils literal notranslate"><span class=3D"pre">Double</span></co=
de>, and <code class=3D"docutils literal notranslate"><span class=3D"pre">B=
ool</span></code>) are hashable by default, and can be used as set value ty=
pes or dictionary key types. Enumeration case values without associated val=
ues (as described in <a class=3D"reference internal" href=3D"https://docs.s=
wift.org/swift-book/LanguageGuide/Enumerations.html"><span class=3D"doc">En=
umeration</span></a>) are also hashable by default.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p>You can use your own custom types as set value types or dictionary key t=
ypes by making them conform to the <code class=3D"docutils literal notransl=
ate"><span class=3D"pre">Hashable</span></code> protocol from Swift=E2=80=
=99s standard library. Types that conform to the <code class=3D"docutils li=
teral notranslate"><span class=3D"pre">Hashable</span></code> protocol must=
 provide a gettable <code class=3D"docutils literal notranslate"><span clas=
s=3D"pre">Int</span></code> property called <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">hashValue</span></code>. The value return=
ed by a type=E2=80=99s <code class=3D"docutils literal notranslate"><span c=
lass=3D"pre">hashValue</span></code> property is not required to be the sam=
e across different executions of the same program, or in different programs=
.</p>
<p>Because the <code class=3D"docutils literal notranslate"><span class=3D"=
pre">Hashable</span></code> protocol conforms to <code class=3D"docutils li=
teral notranslate"><span class=3D"pre">Equatable</span></code>, conforming =
types must also provide an implementation of the equals operator (<code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">=3D=3D</span></code=
>). The <code class=3D"docutils literal notranslate"><span class=3D"pre">Eq=
uatable</span></code> protocol requires any conforming implementation of <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">=3D=3D</span=
></code> to be an equivalence relation. That is, an implementation of <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">=3D=3D</span></=
code> must satisfy the following three conditions, for all values <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">a</span></code>, <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">b</span></co=
de>, and <code class=3D"docutils literal notranslate"><span class=3D"pre">c=
</span></code>:</p>
<ul class=3D"simple">
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">a</spa=
n> <span class=3D"pre">=3D=3D</span> <span class=3D"pre">a</span></code> (R=
eflexivity)</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">a</spa=
n> <span class=3D"pre">=3D=3D</span> <span class=3D"pre">b</span></code> im=
plies <code class=3D"docutils literal notranslate"><span class=3D"pre">b</s=
pan> <span class=3D"pre">=3D=3D</span> <span class=3D"pre">a</span></code> =
(Symmetry)</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">a</spa=
n> <span class=3D"pre">=3D=3D</span> <span class=3D"pre">b</span> <span cla=
ss=3D"pre">&amp;&amp;</span> <span class=3D"pre">b</span> <span class=3D"pr=
e">=3D=3D</span> <span class=3D"pre">c</span></code> implies <code class=3D=
"docutils literal notranslate"><span class=3D"pre">a</span> <span class=3D"=
pre">=3D=3D</span> <span class=3D"pre">c</span></code> (Transitivity)</li>
</ul>
<p class=3D"last">For more information about conforming to protocols, see <=
a class=3D"reference internal" href=3D"https://docs.swift.org/swift-book/La=
nguageGuide/Protocols.html"><span class=3D"doc">Protocols</span></a>.</p>
</div>
</div>
<div class=3D"section" id=3D"ID485">
<h3>Set Type Syntax<a class=3D"headerlink" href=3D"https://docs.swift.org/s=
wift-book/LanguageGuide/CollectionTypes.html#ID485" title=3D"Permalink to t=
his headline">=C2=B6</a></h3>
<p>The type of a Swift set is written as <code class=3D"docutils literal no=
translate"><span class=3D"pre">Set&lt;Element&gt;</span></code>, where <cod=
e class=3D"docutils literal notranslate"><span class=3D"pre">Element</span>=
</code> is the type that the set is allowed to store. Unlike arrays, sets d=
o not have an equivalent shorthand form.</p>
</div>
<div class=3D"section" id=3D"ID503">
<h3>Creating and Initializing an Empty Set<a class=3D"headerlink" href=3D"h=
ttps://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID503" =
title=3D"Permalink to this headline">=C2=B6</a></h3>
<p>You can create an empty set of a certain type using initializer syntax:<=
/p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">letters</span> =3D <span class=3D"nv">Set</span=
>&lt;<span class=3D"nc">Character</span>&gt;()
</li><li><span class=3D"nv">print</span>(<span class=3D"s">"letters is of t=
ype Set&lt;Character&gt; with </span>\<span class=3D"p">(</span><span class=
=3D"nv">letters</span>.<span class=3D"nv">count</span><span class=3D"p">)</=
span><span class=3D"s"> items."</span>)
</li><li><span class=3D"c">// Prints "letters is of type Set&lt;Character&g=
t; with 0 items."</span>
</li></ol></div></div></div>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">The type of the <code class=3D"docutils literal notransla=
te"><span class=3D"pre">letters</span></code> variable is inferred to be <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">Set&lt;Chara=
cter&gt;</span></code>, from the type of the initializer.</p>
</div>
<p>Alternatively, if the context already provides type information, such as=
 a function argument or an already typed variable or constant, you can crea=
te an empty set with an empty array literal:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">l=
etters</span>.<span class=3D"nv">insert</span>(<span class=3D"s">"a"</span>=
)
</li><li><span class=3D"c">// letters now contains 1 value of type Characte=
r</span>
</li><li><span class=3D"nv">letters</span> =3D []
</li><li><span class=3D"c">// letters is now an empty set, but is still of =
type Set&lt;Character&gt;</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID504">
<h3>Creating a Set with an Array Literal<a class=3D"headerlink" href=3D"htt=
ps://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID504" ti=
tle=3D"Permalink to this headline">=C2=B6</a></h3>
<p>You can also initialize a set with an array literal, as a shorthand way =
to write one or more values as a set collection.</p>
<p>The example below creates a set called <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">favoriteGenres</span></code> to store <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">String</span></=
code> values:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">favoriteGenres</span>: <span class=3D"nc">Set</=
span>&lt;<span class=3D"nc">String</span>&gt; =3D [<span class=3D"s">"Rock"=
</span>, <span class=3D"s">"Classical"</span>, <span class=3D"s">"Hip hop"<=
/span>]
</li><li><span class=3D"c">// favoriteGenres has been initialized with thre=
e initial items</span>
</li></ol></div></div></div>
<p>The <code class=3D"docutils literal notranslate"><span class=3D"pre">fav=
oriteGenres</span></code> variable is declared as =E2=80=9Ca set of <code c=
lass=3D"docutils literal notranslate"><span class=3D"pre">String</span></co=
de> values=E2=80=9D, written as <code class=3D"docutils literal notranslate=
"><span class=3D"pre">Set&lt;String&gt;</span></code>. Because this particu=
lar set has specified a value type of <code class=3D"docutils literal notra=
nslate"><span class=3D"pre">String</span></code>, it is <em>only</em> allow=
ed to store <code class=3D"docutils literal notranslate"><span class=3D"pre=
">String</span></code> values. Here, the <code class=3D"docutils literal no=
translate"><span class=3D"pre">favoriteGenres</span></code> set is initiali=
zed with three <code class=3D"docutils literal notranslate"><span class=3D"=
pre">String</span></code> values (<code class=3D"docutils literal notransla=
te"><span class=3D"pre">"Rock"</span></code>, <code class=3D"docutils liter=
al notranslate"><span class=3D"pre">"Classical"</span></code>, and <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">"Hip</span> <span =
class=3D"pre">hop"</span></code>), written within an array literal.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">The <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">favoriteGenres</span></code> set is declared as a variable (wit=
h the <code class=3D"docutils literal notranslate"><span class=3D"pre">var<=
/span></code> introducer) and not a constant (with the <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">let</span></code> introducer) =
because items are added and removed in the examples below.</p>
</div>
<p>A set type cannot be inferred from an array literal alone, so the type <=
code class=3D"docutils literal notranslate"><span class=3D"pre">Set</span><=
/code> must be explicitly declared. However, because of Swift=E2=80=99s typ=
e inference, you don=E2=80=99t have to write the type of the set=E2=80=99s =
elements if you=E2=80=99re initializing it with an array literal that conta=
ins values of just one type. The initialization of <code class=3D"docutils =
literal notranslate"><span class=3D"pre">favoriteGenres</span></code> could=
 have been written in a shorter form instead:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">favoriteGenres</span>: <span class=3D"nc">Set</=
span> =3D [<span class=3D"s">"Rock"</span>, <span class=3D"s">"Classical"</=
span>, <span class=3D"s">"Hip hop"</span>]
</li></ol></div></div></div>
<p>Because all values in the array literal are of the same type, Swift can =
infer that <code class=3D"docutils literal notranslate"><span class=3D"pre"=
>Set&lt;String&gt;</span></code> is the correct type to use for the <code c=
lass=3D"docutils literal notranslate"><span class=3D"pre">favoriteGenres</s=
pan></code> variable.</p>
</div>
<div class=3D"section" id=3D"ID488">
<h3>Accessing and Modifying a Set<a class=3D"headerlink" href=3D"https://do=
cs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID488" title=3D"=
Permalink to this headline">=C2=B6</a></h3>
<p>You access and modify a set through its methods and properties.</p>
<p>To find out the number of items in a set, check its read-only <code clas=
s=3D"docutils literal notranslate"><span class=3D"pre">count</span></code> =
property:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">p=
rint</span>(<span class=3D"s">"I have </span>\<span class=3D"p">(</span><sp=
an class=3D"nv">favoriteGenres</span>.<span class=3D"nv">count</span><span =
class=3D"p">)</span><span class=3D"s"> favorite music genres."</span>)
</li><li><span class=3D"c">// Prints "I have 3 favorite music genres."</spa=
n>
</li></ol></div></div></div>
<p>Use the Boolean <code class=3D"docutils literal notranslate"><span class=
=3D"pre">isEmpty</span></code> property as a shortcut for checking whether =
the <code class=3D"docutils literal notranslate"><span class=3D"pre">count<=
/span></code> property is equal to <code class=3D"docutils literal notransl=
ate"><span class=3D"pre">0</span></code>:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">if=
</span> <span class=3D"nv">favoriteGenres</span>.<span class=3D"nv">isEmpty=
</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"As far as m=
usic goes, I'm not picky."</span>)
</li><li>} <span class=3D"k">else</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"I have part=
icular music preferences."</span>)
</li><li>}
</li><li><span class=3D"c">// Prints "I have particular music preferences."=
</span>
</li></ol></div></div></div>
<p>You can add a new item into a set by calling the set=E2=80=99s <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">insert(_:)</span></=
code> method:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">f=
avoriteGenres</span>.<span class=3D"nv">insert</span>(<span class=3D"s">"Ja=
zz"</span>)
</li><li><span class=3D"c">// favoriteGenres now contains 4 items</span>
</li></ol></div></div></div>
<p>You can remove an item from a set by calling the set=E2=80=99s <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">remove(_:)</span></=
code> method, which removes the item if it=E2=80=99s a member of the set, a=
nd returns the removed value, or returns <code class=3D"docutils literal no=
translate"><span class=3D"pre">nil</span></code> if the set did not contain=
 it. Alternatively, all items in a set can be removed with its <code class=
=3D"docutils literal notranslate"><span class=3D"pre">removeAll()</span></c=
ode> method.</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">if=
</span> <span class=3D"k">let</span> <span class=3D"nv">removedGenre</span>=
 =3D <span class=3D"nv">favoriteGenres</span>.<span class=3D"nv">remove</sp=
an>(<span class=3D"s">"Rock"</span>) {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"</span>\<sp=
an class=3D"p">(</span><span class=3D"nv">removedGenre</span><span class=3D=
"p">)</span><span class=3D"s">? I'm over it."</span>)
</li><li>} <span class=3D"k">else</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"I never muc=
h cared for that."</span>)
</li><li>}
</li><li><span class=3D"c">// Prints "Rock? I'm over it."</span>
</li></ol></div></div></div>
<p>To check whether a set contains a particular item, use the <code class=
=3D"docutils literal notranslate"><span class=3D"pre">contains(_:)</span></=
code> method.</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">if=
</span> <span class=3D"nv">favoriteGenres</span>.<span class=3D"nv">contain=
s</span>(<span class=3D"s">"Funk"</span>) {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"I get up on=
 the good foot."</span>)
</li><li>} <span class=3D"k">else</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"It's too fu=
nky in here."</span>)
</li><li>}
</li><li><span class=3D"c">// Prints "It's too funky in here."</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID489">
<h3>Iterating Over a Set<a class=3D"headerlink" href=3D"https://docs.swift.=
org/swift-book/LanguageGuide/CollectionTypes.html#ID489" title=3D"Permalink=
 to this headline">=C2=B6</a></h3>
<p>You can iterate over the values in a set with a <code class=3D"docutils =
literal notranslate"><span class=3D"pre">for</span></code>-<code class=3D"d=
ocutils literal notranslate"><span class=3D"pre">in</span></code> loop.</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">fo=
r</span> <span class=3D"nv">genre</span> <span class=3D"k">in</span> <span =
class=3D"nv">favoriteGenres</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"</span>\<sp=
an class=3D"p">(</span><span class=3D"nv">genre</span><span class=3D"p">)</=
span><span class=3D"s">"</span>)
</li><li>}
</li><li><span class=3D"c">// Classical</span>
</li><li><span class=3D"c">// Jazz</span>
</li><li><span class=3D"c">// Hip hop</span>
</li></ol></div></div></div>
<p>For more about the <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">for</span></code>-<code class=3D"docutils literal notranslate">=
<span class=3D"pre">in</span></code> loop, see <a class=3D"reference intern=
al" href=3D"https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.htm=
l#ID121"><span class=3D"std std-ref">For-In Loops</span></a>.</p>
<p>Swift=E2=80=99s <code class=3D"docutils literal notranslate"><span class=
=3D"pre">Set</span></code> type does not have a defined ordering. To iterat=
e over the values of a set in a specific order, use the <code class=3D"docu=
tils literal notranslate"><span class=3D"pre">sorted()</span></code> method=
, which returns the set=E2=80=99s elements as an array sorted using the <co=
de class=3D"docutils literal notranslate"><span class=3D"pre">&lt;</span></=
code> operator.</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">fo=
r</span> <span class=3D"nv">genre</span> <span class=3D"k">in</span> <span =
class=3D"nv">favoriteGenres</span>.<span class=3D"nv">sorted</span>() {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"</span>\<sp=
an class=3D"p">(</span><span class=3D"nv">genre</span><span class=3D"p">)</=
span><span class=3D"s">"</span>)
</li><li>}
</li><li><span class=3D"c">// Classical</span>
</li><li><span class=3D"c">// Hip hop</span>
</li><li><span class=3D"c">// Jazz</span>
</li></ol></div></div></div>
</div>
</div>
<div class=3D"section" id=3D"ID490">
<h2>Performing Set Operations<a class=3D"headerlink" href=3D"https://docs.s=
wift.org/swift-book/LanguageGuide/CollectionTypes.html#ID490" title=3D"Perm=
alink to this headline">=C2=B6</a></h2>
<p>You can efficiently perform fundamental set operations, such as combinin=
g two sets together, determining which values two sets have in common, or d=
etermining whether two sets contain all, some, or none of the same values.<=
/p>
<div class=3D"section" id=3D"ID505">
<h3>Fundamental Set Operations<a class=3D"headerlink" href=3D"https://docs.=
swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID505" title=3D"Per=
malink to this headline">=C2=B6</a></h3>
<p>The illustration below depicts two sets=E2=80=94<code class=3D"docutils =
literal notranslate"><span class=3D"pre">a</span></code> and <code class=3D=
"docutils literal notranslate"><span class=3D"pre">b</span></code>=E2=80=94=
with the results of various set operations represented by the shaded region=
s.</p>
<img alt=3D"../_images/setVennDiagram_2x.png" class=3D"align-center" src=3D=
"https://docs.swift.org/swift-book/_images/setVennDiagram_2x.png" style=3D"=
width: 561px;">
<ul class=3D"simple">
<li>Use the <code class=3D"docutils literal notranslate"><span class=3D"pre=
">intersection(_:)</span></code> method to create a new set with only the v=
alues common to both sets.</li>
<li>Use the <code class=3D"docutils literal notranslate"><span class=3D"pre=
">symmetricDifference(_:)</span></code> method to create a new set with val=
ues in either set, but not both.</li>
<li>Use the <code class=3D"docutils literal notranslate"><span class=3D"pre=
">union(_:)</span></code> method to create a new set with all of the values=
 in both sets.</li>
<li>Use the <code class=3D"docutils literal notranslate"><span class=3D"pre=
">subtracting(_:)</span></code> method to create a new set with values not =
in the specified set.</li>
</ul>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">le=
t</span> <span class=3D"nv">oddDigits</span>: <span class=3D"nc">Set</span>=
 =3D [<span class=3D"m">1</span>, <span class=3D"m">3</span>, <span class=
=3D"m">5</span>, <span class=3D"m">7</span>, <span class=3D"m">9</span>]
</li><li><span class=3D"k">let</span> <span class=3D"nv">evenDigits</span>:=
 <span class=3D"nc">Set</span> =3D [<span class=3D"m">0</span>, <span class=
=3D"m">2</span>, <span class=3D"m">4</span>, <span class=3D"m">6</span>, <s=
pan class=3D"m">8</span>]
</li><li><span class=3D"k">let</span> <span class=3D"nv">singleDigitPrimeNu=
mbers</span>: <span class=3D"nc">Set</span> =3D [<span class=3D"m">2</span>=
, <span class=3D"m">3</span>, <span class=3D"m">5</span>, <span class=3D"m"=
>7</span>]
</li><li>
</li><li><span class=3D"nv">oddDigits</span>.<span class=3D"nv">union</span=
>(<span class=3D"nv">evenDigits</span>).<span class=3D"nv">sorted</span>()
</li><li><span class=3D"c">// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
</li><li><span class=3D"nv">oddDigits</span>.<span class=3D"nv">intersectio=
n</span>(<span class=3D"nv">evenDigits</span>).<span class=3D"nv">sorted</s=
pan>()
</li><li><span class=3D"c">// []</span>
</li><li><span class=3D"nv">oddDigits</span>.<span class=3D"nv">subtracting=
</span>(<span class=3D"nv">singleDigitPrimeNumbers</span>).<span class=3D"n=
v">sorted</span>()
</li><li><span class=3D"c">// [1, 9]</span>
</li><li><span class=3D"nv">oddDigits</span>.<span class=3D"nv">symmetricDi=
fference</span>(<span class=3D"nv">singleDigitPrimeNumbers</span>).<span cl=
ass=3D"nv">sorted</span>()
</li><li><span class=3D"c">// [1, 2, 9]</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID506">
<h3>Set Membership and Equality<a class=3D"headerlink" href=3D"https://docs=
.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID506" title=3D"Pe=
rmalink to this headline">=C2=B6</a></h3>
<p>The illustration below depicts three sets=E2=80=94<code class=3D"docutil=
s literal notranslate"><span class=3D"pre">a</span></code>, <code class=3D"=
docutils literal notranslate"><span class=3D"pre">b</span></code> and <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">c</span></code>=
=E2=80=94with overlapping regions representing elements shared among sets. =
Set <code class=3D"docutils literal notranslate"><span class=3D"pre">a</spa=
n></code> is a <em>superset</em> of set <code class=3D"docutils literal not=
ranslate"><span class=3D"pre">b</span></code>, because <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">a</span></code> contains all e=
lements in <code class=3D"docutils literal notranslate"><span class=3D"pre"=
>b</span></code>. Conversely, set <code class=3D"docutils literal notransla=
te"><span class=3D"pre">b</span></code> is a <em>subset</em> of set <code c=
lass=3D"docutils literal notranslate"><span class=3D"pre">a</span></code>, =
because all elements in <code class=3D"docutils literal notranslate"><span =
class=3D"pre">b</span></code> are also contained by <code class=3D"docutils=
 literal notranslate"><span class=3D"pre">a</span></code>. Set <code class=
=3D"docutils literal notranslate"><span class=3D"pre">b</span></code> and s=
et <code class=3D"docutils literal notranslate"><span class=3D"pre">c</span=
></code> are <em>disjoint</em> with one another, because they share no elem=
ents in common.</p>
<img alt=3D"../_images/setEulerDiagram_2x.png" class=3D"align-center" src=
=3D"https://docs.swift.org/swift-book/_images/setEulerDiagram_2x.png" style=
=3D"width: 551px;">
<ul class=3D"simple">
<li>Use the =E2=80=9Cis equal=E2=80=9D operator (<code class=3D"docutils li=
teral notranslate"><span class=3D"pre">=3D=3D</span></code>) to determine w=
hether two sets contain all of the same values.</li>
<li>Use the <code class=3D"docutils literal notranslate"><span class=3D"pre=
">isSubset(of:)</span></code> method to determine whether all of the values=
 of a set are contained in the specified set.</li>
<li>Use the <code class=3D"docutils literal notranslate"><span class=3D"pre=
">isSuperset(of:)</span></code> method to determine whether a set contains =
all of the values in a specified set.</li>
<li>Use the <code class=3D"docutils literal notranslate"><span class=3D"pre=
">isStrictSubset(of:)</span></code> or <code class=3D"docutils literal notr=
anslate"><span class=3D"pre">isStrictSuperset(of:)</span></code> methods to=
 determine whether a set is a subset or superset, but not equal to, a speci=
fied set.</li>
<li>Use the <code class=3D"docutils literal notranslate"><span class=3D"pre=
">isDisjoint(with:)</span></code> method to determine whether two sets have=
 no values in common.</li>
</ul>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">le=
t</span> <span class=3D"nv">houseAnimals</span>: <span class=3D"nc">Set</sp=
an> =3D [<span class=3D"s">"<img class=3D"chromoji" title=3D"Dog Face" alt=
=3D"=F0=9F=90=B6" src=3D"chrome-extension://cahedbegdkagmcjfolhdlechbkeaiek=
i/images/apple/1f436.png">"</span>, <span class=3D"s">"<img class=3D"chromo=
ji" title=3D"Cat Face" alt=3D"=F0=9F=90=B1" src=3D"chrome-extension://cahed=
begdkagmcjfolhdlechbkeaieki/images/apple/1f431.png">"</span>]
</li><li><span class=3D"k">let</span> <span class=3D"nv">farmAnimals</span>=
: <span class=3D"nc">Set</span> =3D [<span class=3D"s">"<img class=3D"chrom=
oji" title=3D"Cow Face" alt=3D"=F0=9F=90=AE" src=3D"chrome-extension://cahe=
dbegdkagmcjfolhdlechbkeaieki/images/apple/1f42e.png">"</span>, <span class=
=3D"s">"<img class=3D"chromoji" title=3D"Chicken" alt=3D"=F0=9F=90=94" src=
=3D"chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f414.=
png">"</span>, <span class=3D"s">"<img class=3D"chromoji" title=3D"Sheep" a=
lt=3D"=F0=9F=90=91" src=3D"chrome-extension://cahedbegdkagmcjfolhdlechbkeai=
eki/images/apple/1f411.png">"</span>, <span class=3D"s">"<img class=3D"chro=
moji" title=3D"Dog Face" alt=3D"=F0=9F=90=B6" src=3D"chrome-extension://cah=
edbegdkagmcjfolhdlechbkeaieki/images/apple/1f436.png">"</span>, <span class=
=3D"s">"<img class=3D"chromoji" title=3D"Cat Face" alt=3D"=F0=9F=90=B1" src=
=3D"chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f431.=
png">"</span>]
</li><li><span class=3D"k">let</span> <span class=3D"nv">cityAnimals</span>=
: <span class=3D"nc">Set</span> =3D [<span class=3D"s">"<img class=3D"chrom=
oji" title=3D"Bird" alt=3D"=F0=9F=90=A6" src=3D"chrome-extension://cahedbeg=
dkagmcjfolhdlechbkeaieki/images/apple/1f426.png">"</span>, <span class=3D"s=
">"<img class=3D"chromoji" title=3D"Mouse Face" alt=3D"=F0=9F=90=AD" src=3D=
"chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f42d.png=
">"</span>]
</li><li>
</li><li><span class=3D"nv">houseAnimals</span>.<span class=3D"nv">isSubset=
</span>(<span class=3D"nv">of</span>: <span class=3D"nv">farmAnimals</span>=
)
</li><li><span class=3D"c">// true</span>
</li><li><span class=3D"nv">farmAnimals</span>.<span class=3D"nv">isSuperse=
t</span>(<span class=3D"nv">of</span>: <span class=3D"nv">houseAnimals</spa=
n>)
</li><li><span class=3D"c">// true</span>
</li><li><span class=3D"nv">farmAnimals</span>.<span class=3D"nv">isDisjoin=
t</span>(<span class=3D"nv">with</span>: <span class=3D"nv">cityAnimals</sp=
an>)
</li><li><span class=3D"c">// true</span>
</li></ol></div></div></div>
</div>
</div>
<div class=3D"section" id=3D"ID113">
<h2>Dictionaries<a class=3D"headerlink" href=3D"https://docs.swift.org/swif=
t-book/LanguageGuide/CollectionTypes.html#ID113" title=3D"Permalink to this=
 headline">=C2=B6</a></h2>
<p>A <em>dictionary</em> stores associations between keys of the same type =
and values of the same type in a collection with no defined ordering. Each =
value is associated with a unique <em>key</em>, which acts as an identifier=
 for that value within the dictionary. Unlike items in an array, items in a=
 dictionary do not have a specified order. You use a dictionary when you ne=
ed to look up values based on their identifier, in much the same way that a=
 real-world dictionary is used to look up the definition for a particular w=
ord.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p>Swift=E2=80=99s <code class=3D"docutils literal notranslate"><span class=
=3D"pre">Dictionary</span></code> type is bridged to Foundation=E2=80=99s <=
code class=3D"docutils literal notranslate"><span class=3D"pre">NSDictionar=
y</span></code> class.</p>
<p class=3D"last">For more information about using <code class=3D"docutils =
literal notranslate"><span class=3D"pre">Dictionary</span></code> with Foun=
dation and Cocoa, see <a class=3D"reference external" href=3D"https://devel=
oper.apple.com/documentation/swift/dictionary#2846239">Bridging Between Dic=
tionary and NSDictionary</a>.</p>
</div>
<div class=3D"section" id=3D"ID114">
<h3>Dictionary Type Shorthand Syntax<a class=3D"headerlink" href=3D"https:/=
/docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID114" title=
=3D"Permalink to this headline">=C2=B6</a></h3>
<p>The type of a Swift dictionary is written in full as <code class=3D"docu=
tils literal notranslate"><span class=3D"pre">Dictionary&lt;Key,</span> <sp=
an class=3D"pre">Value&gt;</span></code>, where <code class=3D"docutils lit=
eral notranslate"><span class=3D"pre">Key</span></code> is the type of valu=
e that can be used as a dictionary key, and <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">Value</span></code> is the type of value =
that the dictionary stores for those keys.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">A dictionary <code class=3D"docutils literal notranslate"=
><span class=3D"pre">Key</span></code> type must conform to the <code class=
=3D"docutils literal notranslate"><span class=3D"pre">Hashable</span></code=
> protocol, like a set=E2=80=99s value type.</p>
</div>
<p>You can also write the type of a dictionary in shorthand form as <code c=
lass=3D"docutils literal notranslate"><span class=3D"pre">[Key:</span> <spa=
n class=3D"pre">Value]</span></code>. Although the two forms are functional=
ly identical, the shorthand form is preferred and is used throughout this g=
uide when referring to the type of a dictionary.</p>
</div>
<div class=3D"section" id=3D"ID118">
<h3>Creating an Empty Dictionary<a class=3D"headerlink" href=3D"https://doc=
s.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID118" title=3D"P=
ermalink to this headline">=C2=B6</a></h3>
<p>As with arrays, you can create an empty <code class=3D"docutils literal =
notranslate"><span class=3D"pre">Dictionary</span></code> of a certain type=
 by using initializer syntax:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">namesOfIntegers</span> =3D [<span class=3D"nv">=
Int</span>: <span class=3D"nv">String</span>]()
</li><li><span class=3D"c">// namesOfIntegers is an empty [Int: String] dic=
tionary</span>
</li></ol></div></div></div>
<p>This example creates an empty dictionary of type <code class=3D"docutils=
 literal notranslate"><span class=3D"pre">[Int:</span> <span class=3D"pre">=
String]</span></code> to store human-readable names of integer values. Its =
keys are of type <code class=3D"docutils literal notranslate"><span class=
=3D"pre">Int</span></code>, and its values are of type <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">String</span></code>.</p>
<p>If the context already provides type information, you can create an empt=
y dictionary with an empty dictionary literal, which is written as <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">[:]</span></code> =
(a colon inside a pair of square brackets):</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">n=
amesOfIntegers</span>[<span class=3D"m">16</span>] =3D <span class=3D"s">"s=
ixteen"</span>
</li><li><span class=3D"c">// namesOfIntegers now contains 1 key-value pair=
</span>
</li><li><span class=3D"nv">namesOfIntegers</span> =3D [:]
</li><li><span class=3D"c">// namesOfIntegers is once again an empty dictio=
nary of type [Int: String]</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID507">
<h3>Creating a Dictionary with a Dictionary Literal<a class=3D"headerlink" =
href=3D"https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.htm=
l#ID507" title=3D"Permalink to this headline">=C2=B6</a></h3>
<p>You can also initialize a dictionary with a <em>dictionary literal</em>,=
 which has a similar syntax to the array literal seen earlier. A dictionary=
 literal is a shorthand way to write one or more key-value pairs as a <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">Dictionary</spa=
n></code> collection.</p>
<p>A <em>key-value pair</em> is a combination of a key and a value. In a di=
ctionary literal, the key and value in each key-value pair are separated by=
 a colon. The key-value pairs are written as a list, separated by commas, s=
urrounded by a pair of square brackets:</p>
<div class=3D"syntax-outline highlight-swift notranslate"><div class=3D"cod=
e-sample"><div class=3D"Swift highlight"><ol class=3D"code-lines"><li>[<spa=
n class=3D"gi">key 1</span>: <span class=3D"gi">value 1</span>, <span class=
=3D"gi">key 2</span>: <span class=3D"gi">value 2</span>, <span class=3D"gi"=
>key 3</span>: <span class=3D"gi">value 3</span>]
</li></ol></div></div></div>
<p>The example below creates a dictionary to store the names of internation=
al airports. In this dictionary, the keys are three-letter International Ai=
r Transport Association codes, and the values are airport names:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">airports</span>: [<span class=3D"nc">String</sp=
an>: <span class=3D"nc">String</span>] =3D [<span class=3D"s">"YYZ"</span>:=
 <span class=3D"s">"Toronto Pearson"</span>, <span class=3D"s">"DUB"</span>=
: <span class=3D"s">"Dublin"</span>]
</li></ol></div></div></div>
<p>The <code class=3D"docutils literal notranslate"><span class=3D"pre">air=
ports</span></code> dictionary is declared as having a type of <code class=
=3D"docutils literal notranslate"><span class=3D"pre">[String:</span> <span=
 class=3D"pre">String]</span></code>, which means =E2=80=9Ca <code class=3D=
"docutils literal notranslate"><span class=3D"pre">Dictionary</span></code>=
 whose keys are of type <code class=3D"docutils literal notranslate"><span =
class=3D"pre">String</span></code>, and whose values are also of type <code=
 class=3D"docutils literal notranslate"><span class=3D"pre">String</span></=
code>=E2=80=9D.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">The <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">airports</span></code> dictionary is declared as a variable (wi=
th the <code class=3D"docutils literal notranslate"><span class=3D"pre">var=
</span></code> introducer), and not a constant (with the <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">let</span></code> introducer=
), because more airports are added to the dictionary in the examples below.=
</p>
</div>
<p>The <code class=3D"docutils literal notranslate"><span class=3D"pre">air=
ports</span></code> dictionary is initialized with a dictionary literal con=
taining two key-value pairs. The first pair has a key of <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">"YYZ"</span></code> and a va=
lue of <code class=3D"docutils literal notranslate"><span class=3D"pre">"To=
ronto</span> <span class=3D"pre">Pearson"</span></code>. The second pair ha=
s a key of <code class=3D"docutils literal notranslate"><span class=3D"pre"=
>"DUB"</span></code> and a value of <code class=3D"docutils literal notrans=
late"><span class=3D"pre">"Dublin"</span></code>.</p>
<p>This dictionary literal contains two <code class=3D"docutils literal not=
ranslate"><span class=3D"pre">String:</span> <span class=3D"pre">String</sp=
an></code> pairs. This key-value type matches the type of the <code class=
=3D"docutils literal notranslate"><span class=3D"pre">airports</span></code=
> variable declaration (a dictionary with only <code class=3D"docutils lite=
ral notranslate"><span class=3D"pre">String</span></code> keys, and only <c=
ode class=3D"docutils literal notranslate"><span class=3D"pre">String</span=
></code> values), and so the assignment of the dictionary literal is permit=
ted as a way to initialize the <code class=3D"docutils literal notranslate"=
><span class=3D"pre">airports</span></code> dictionary with two initial ite=
ms.</p>
<p>As with arrays, you don=E2=80=99t have to write the type of the dictiona=
ry if you=E2=80=99re initializing it with a dictionary literal whose keys a=
nd values have consistent types. The initialization of <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">airports</span></code> could h=
ave been written in a shorter form instead:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">va=
r</span> <span class=3D"nv">airports</span> =3D [<span class=3D"s">"YYZ"</s=
pan>: <span class=3D"s">"Toronto Pearson"</span>, <span class=3D"s">"DUB"</=
span>: <span class=3D"s">"Dublin"</span>]
</li></ol></div></div></div>
<p>Because all keys in the literal are of the same type as each other, and =
likewise all values are of the same type as each other, Swift can infer tha=
t <code class=3D"docutils literal notranslate"><span class=3D"pre">[String:=
</span> <span class=3D"pre">String]</span></code> is the correct type to us=
e for the <code class=3D"docutils literal notranslate"><span class=3D"pre">=
airports</span></code> dictionary.</p>
</div>
<div class=3D"section" id=3D"ID116">
<h3>Accessing and Modifying a Dictionary<a class=3D"headerlink" href=3D"htt=
ps://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID116" ti=
tle=3D"Permalink to this headline">=C2=B6</a></h3>
<p>You access and modify a dictionary through its methods and properties, o=
r by using subscript syntax.</p>
<p>As with an array, you find out the number of items in a <code class=3D"d=
ocutils literal notranslate"><span class=3D"pre">Dictionary</span></code> b=
y checking its read-only <code class=3D"docutils literal notranslate"><span=
 class=3D"pre">count</span></code> property:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">p=
rint</span>(<span class=3D"s">"The airports dictionary contains </span>\<sp=
an class=3D"p">(</span><span class=3D"nv">airports</span>.<span class=3D"nv=
">count</span><span class=3D"p">)</span><span class=3D"s"> items."</span>)
</li><li><span class=3D"c">// Prints "The airports dictionary contains 2 it=
ems."</span>
</li></ol></div></div></div>
<p>Use the Boolean <code class=3D"docutils literal notranslate"><span class=
=3D"pre">isEmpty</span></code> property as a shortcut for checking whether =
the <code class=3D"docutils literal notranslate"><span class=3D"pre">count<=
/span></code> property is equal to <code class=3D"docutils literal notransl=
ate"><span class=3D"pre">0</span></code>:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">if=
</span> <span class=3D"nv">airports</span>.<span class=3D"nv">isEmpty</span=
> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"The airport=
s dictionary is empty."</span>)
</li><li>} <span class=3D"k">else</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"The airport=
s dictionary is not empty."</span>)
</li><li>}
</li><li><span class=3D"c">// Prints "The airports dictionary is not empty.=
"</span>
</li></ol></div></div></div>
<p>You can add a new item to a dictionary with subscript syntax. Use a new =
key of the appropriate type as the subscript index, and assign a new value =
of the appropriate type:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">a=
irports</span>[<span class=3D"s">"LHR"</span>] =3D <span class=3D"s">"Londo=
n"</span>
</li><li><span class=3D"c">// the airports dictionary now contains 3 items<=
/span>
</li></ol></div></div></div>
<p>You can also use subscript syntax to change the value associated with a =
particular key:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">a=
irports</span>[<span class=3D"s">"LHR"</span>] =3D <span class=3D"s">"Londo=
n Heathrow"</span>
</li><li><span class=3D"c">// the value for "LHR" has been changed to "Lond=
on Heathrow"</span>
</li></ol></div></div></div>
<p>As an alternative to subscripting, use a dictionary=E2=80=99s <code clas=
s=3D"docutils literal notranslate"><span class=3D"pre">updateValue(_:forKey=
:)</span></code> method to set or update the value for a particular key. Li=
ke the subscript examples above, the <code class=3D"docutils literal notran=
slate"><span class=3D"pre">updateValue(_:forKey:)</span></code> method sets=
 a value for a key if none exists, or updates the value if that key already=
 exists. Unlike a subscript, however, the <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">updateValue(_:forKey:)</span></code> method=
 returns the <em>old</em> value after performing an update. This enables yo=
u to check whether or not an update took place.</p>
<p>The <code class=3D"docutils literal notranslate"><span class=3D"pre">upd=
ateValue(_:forKey:)</span></code> method returns an optional value of the d=
ictionary=E2=80=99s value type. For a dictionary that stores <code class=3D=
"docutils literal notranslate"><span class=3D"pre">String</span></code> val=
ues, for example, the method returns a value of type <code class=3D"docutil=
s literal notranslate"><span class=3D"pre">String?</span></code>, or =E2=80=
=9Coptional <code class=3D"docutils literal notranslate"><span class=3D"pre=
">String</span></code>=E2=80=9D. This optional value contains the old value=
 for that key if one existed before the update, or <code class=3D"docutils =
literal notranslate"><span class=3D"pre">nil</span></code> if no value exis=
ted:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">if=
</span> <span class=3D"k">let</span> <span class=3D"nv">oldValue</span> =3D=
 <span class=3D"nv">airports</span>.<span class=3D"nv">updateValue</span>(<=
span class=3D"s">"Dublin Airport"</span>, <span class=3D"nv">forKey</span>:=
 <span class=3D"s">"DUB"</span>) {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"The old val=
ue for DUB was </span>\<span class=3D"p">(</span><span class=3D"nv">oldValu=
e</span><span class=3D"p">)</span><span class=3D"s">."</span>)
</li><li>}
</li><li><span class=3D"c">// Prints "The old value for DUB was Dublin."</s=
pan>
</li></ol></div></div></div>
<p>You can also use subscript syntax to retrieve a value from the dictionar=
y for a particular key. Because it is possible to request a key for which n=
o value exists, a dictionary=E2=80=99s subscript returns an optional value =
of the dictionary=E2=80=99s value type. If the dictionary contains a value =
for the requested key, the subscript returns an optional value containing t=
he existing value for that key. Otherwise, the subscript returns <code clas=
s=3D"docutils literal notranslate"><span class=3D"pre">nil</span></code>:</=
p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">if=
</span> <span class=3D"k">let</span> <span class=3D"nv">airportName</span> =
=3D <span class=3D"nv">airports</span>[<span class=3D"s">"DUB"</span>] {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"The name of=
 the airport is </span>\<span class=3D"p">(</span><span class=3D"nv">airpor=
tName</span><span class=3D"p">)</span><span class=3D"s">."</span>)
</li><li>} <span class=3D"k">else</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"That airpor=
t is not in the airports dictionary."</span>)
</li><li>}
</li><li><span class=3D"c">// Prints "The name of the airport is Dublin Air=
port."</span>
</li></ol></div></div></div>
<p>You can use subscript syntax to remove a key-value pair from a dictionar=
y by assigning a value of <code class=3D"docutils literal notranslate"><spa=
n class=3D"pre">nil</span></code> for that key:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"nv">a=
irports</span>[<span class=3D"s">"APL"</span>] =3D <span class=3D"s">"Apple=
 International"</span>
</li><li><span class=3D"c">// "Apple International" is not the real airport=
 for APL, so delete it</span>
</li><li><span class=3D"nv">airports</span>[<span class=3D"s">"APL"</span>]=
 =3D <span class=3D"k">nil</span>
</li><li><span class=3D"c">// APL has now been removed from the dictionary<=
/span>
</li></ol></div></div></div>
<p>Alternatively, remove a key-value pair from a dictionary with the <code =
class=3D"docutils literal notranslate"><span class=3D"pre">removeValue(forK=
ey:)</span></code> method. This method removes the key-value pair if it exi=
sts and returns the removed value, or returns <code class=3D"docutils liter=
al notranslate"><span class=3D"pre">nil</span></code> if no value existed:<=
/p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">if=
</span> <span class=3D"k">let</span> <span class=3D"nv">removedValue</span>=
 =3D <span class=3D"nv">airports</span>.<span class=3D"nv">removeValue</spa=
n>(<span class=3D"nv">forKey</span>: <span class=3D"s">"DUB"</span>) {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"The removed=
 airport's name is </span>\<span class=3D"p">(</span><span class=3D"nv">rem=
ovedValue</span><span class=3D"p">)</span><span class=3D"s">."</span>)
</li><li>} <span class=3D"k">else</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"The airport=
s dictionary does not contain a value for DUB."</span>)
</li><li>}
</li><li><span class=3D"c">// Prints "The removed airport's name is Dublin =
Airport."</span>
</li></ol></div></div></div>
</div>
<div class=3D"section" id=3D"ID117">
<h3>Iterating Over a Dictionary<a class=3D"headerlink" href=3D"https://docs=
.swift.org/swift-book/LanguageGuide/CollectionTypes.html#ID117" title=3D"Pe=
rmalink to this headline">=C2=B6</a></h3>
<p>You can iterate over the key-value pairs in a dictionary with a <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">for</span></code>-=
<code class=3D"docutils literal notranslate"><span class=3D"pre">in</span><=
/code> loop. Each item in the dictionary is returned as a <code class=3D"do=
cutils literal notranslate"><span class=3D"pre">(key,</span> <span class=3D=
"pre">value)</span></code> tuple, and you can decompose the tuple=E2=80=99s=
 members into temporary constants or variables as part of the iteration:</p=
>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">fo=
r</span> (<span class=3D"nv">airportCode</span>, <span class=3D"nv">airport=
Name</span>) <span class=3D"k">in</span> <span class=3D"nv">airports</span>=
 {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"</span>\<sp=
an class=3D"p">(</span><span class=3D"nv">airportCode</span><span class=3D"=
p">)</span><span class=3D"s">: </span>\<span class=3D"p">(</span><span clas=
s=3D"nv">airportName</span><span class=3D"p">)</span><span class=3D"s">"</s=
pan>)
</li><li>}
</li><li><span class=3D"c">// LHR: London Heathrow</span>
</li><li><span class=3D"c">// YYZ: Toronto Pearson</span>
</li></ol></div></div></div>
<p>For more about the <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">for</span></code>-<code class=3D"docutils literal notranslate">=
<span class=3D"pre">in</span></code> loop, see <a class=3D"reference intern=
al" href=3D"https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.htm=
l#ID121"><span class=3D"std std-ref">For-In Loops</span></a>.</p>
<p>You can also retrieve an iterable collection of a dictionary=E2=80=99s k=
eys or values by accessing its <code class=3D"docutils literal notranslate"=
><span class=3D"pre">keys</span></code> and <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">values</span></code> properties:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">fo=
r</span> <span class=3D"nv">airportCode</span> <span class=3D"k">in</span> =
<span class=3D"nv">airports</span>.<span class=3D"nv">keys</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"Airport cod=
e: </span>\<span class=3D"p">(</span><span class=3D"nv">airportCode</span><=
span class=3D"p">)</span><span class=3D"s">"</span>)
</li><li>}
</li><li><span class=3D"c">// Airport code: LHR</span>
</li><li><span class=3D"c">// Airport code: YYZ</span>
</li><li>
</li><li><span class=3D"k">for</span> <span class=3D"nv">airportName</span>=
 <span class=3D"k">in</span> <span class=3D"nv">airports</span>.<span class=
=3D"nv">values</span> {
</li><li>    <span class=3D"nv">print</span>(<span class=3D"s">"Airport nam=
e: </span>\<span class=3D"p">(</span><span class=3D"nv">airportName</span><=
span class=3D"p">)</span><span class=3D"s">"</span>)
</li><li>}
</li><li><span class=3D"c">// Airport name: London Heathrow</span>
</li><li><span class=3D"c">// Airport name: Toronto Pearson</span>
</li></ol></div></div></div>
<p>If you need to use a dictionary=E2=80=99s keys or values with an API tha=
t takes an <code class=3D"docutils literal notranslate"><span class=3D"pre"=
>Array</span></code> instance, initialize a new array with the <code class=
=3D"docutils literal notranslate"><span class=3D"pre">keys</span></code> or=
 <code class=3D"docutils literal notranslate"><span class=3D"pre">values</s=
pan></code> property:</p>
<div class=3D"highlight-swift notranslate"><div class=3D"code-sample"><div =
class=3D"Swift highlight"><ol class=3D"code-lines"><li><span class=3D"k">le=
t</span> <span class=3D"nv">airportCodes</span> =3D [<span class=3D"nv">Str=
ing</span>](<span class=3D"nv">airports</span>.<span class=3D"nv">keys</spa=
n>)
</li><li><span class=3D"c">// airportCodes is ["LHR", "YYZ"]</span>
</li><li>
</li><li><span class=3D"k">let</span> <span class=3D"nv">airportNames</span=
> =3D [<span class=3D"nv">String</span>](<span class=3D"nv">airports</span>=
.<span class=3D"nv">values</span>)
</li><li><span class=3D"c">// airportNames is ["London Heathrow", "Toronto =
Pearson"]</span>
</li></ol></div></div></div>
<p>Swift=E2=80=99s <code class=3D"docutils literal notranslate"><span class=
=3D"pre">Dictionary</span></code> type does not have a defined ordering. To=
 iterate over the keys or values of a dictionary in a specific order, use t=
he <code class=3D"docutils literal notranslate"><span class=3D"pre">sorted(=
)</span></code> method on its <code class=3D"docutils literal notranslate">=
<span class=3D"pre">keys</span></code> or <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">values</span></code> property.</p>
</div>
</div>
</div>


    </article>
    <div class=3D"next_previous">
        <p class=3D"previous"><a href=3D"https://docs.swift.org/swift-book/=
LanguageGuide/StringsAndCharacters.html">Strings and Characters</a></p>
        <p class=3D"next"><a href=3D"https://docs.swift.org/swift-book/Lang=
uageGuide/ControlFlow.html">Control Flow</a></p>
    </div>
    <div class=3D"admonition-beta admonition">
        <p class=3D"first admonition-title">Beta Software</p>
        <p>
          This documentation contains preliminary information about an API =
or technology in development.
          This information is subject to change, and software implemented a=
ccording to this documentation should be tested with final operating system=
 software.
        </p>
        <p class=3D"last"><a class=3D"reference external" href=3D"https://d=
eveloper.apple.com/support/beta-software/">Learn more about using Apple's b=
eta software</a></p>
    </div>
</main>


<footer role=3D"contentinfo">
  <aside>
    <a href=3D"https://swift.org/atom.xml" title=3D"Subscribe to Site Updat=
es"><i class=3D"feed">Subscribe</i></a>
    <a href=3D"https://twitter.com/swiftlang" rel=3D"nofollow" title=3D"Fol=
low @SwiftLang on Twitter"><i class=3D"twitter">Twitter</i></a>
  </aside>

  <p class=3D"copyright">Copyright =C2=A9 2019 Apple Inc. All rights reserv=
ed.</p>
  <p class=3D"trademark">Swift and the Swift logo are trademarks of Apple I=
nc.</p>
  <p class=3D"privacy">
    <a href=3D"https://www.apple.com/privacy/privacy-policy/">Privacy Polic=
y</a>
    <a href=3D"https://www.apple.com/legal/privacy/en-ww/cookies/">Cookies<=
/a>
  </p>
</footer>
<div id=3D"jump_to_overlay"></div>

 =20

<span id=3D"buffer-extension-hover-button" style=3D"display: none; position=
: absolute; z-index: 8675309; width: 100px; height: 25px; background-image:=
 url(&quot;chrome-extension://noojglkidnpfjbincgijbaiedldjfbhh/data/shared/=
img/buffer-hover-icon@2x.png&quot;); background-size: 100px 25px; opacity: =
0.9; cursor: pointer;"></span><div id=3D"syno-nsc-ext-comp-1008" class=3D" =
x-tip-invalid" style=3D"position: absolute; z-index: 11000; visibility: hid=
den; display: none;"><div class=3D"x-tip-invalid-tl"><div class=3D"x-tip-in=
valid-tr"><div class=3D"x-tip-invalid-tc"><div class=3D"x-tip-invalid-heade=
r x-unselectable" id=3D"syno-nsc-ext-gen4"><span class=3D"x-tip-invalid-hea=
der-text"></span></div></div></div></div><div class=3D"x-tip-invalid-bwrap"=
 id=3D"syno-nsc-ext-gen5"><div class=3D"x-tip-invalid-ml"><div class=3D"x-t=
ip-invalid-mr"><div class=3D"x-tip-invalid-mc" id=3D"syno-nsc-ext-gen8"><di=
v class=3D"x-tip-invalid-body" id=3D"syno-nsc-ext-gen6" style=3D"height: au=
to;"></div></div></div></div><div class=3D"x-tip-invalid-bl x-panel-nofoote=
r" id=3D"syno-nsc-ext-gen7"><div class=3D"x-tip-invalid-br"><div class=3D"x=
-tip-invalid-bc"></div></div></div></div><div class=3D"x-tip-anchor x-tip-a=
nchor-top" id=3D"syno-nsc-ext-gen9" style=3D"z-index: 11001;"></div></div><=
/body></html>
------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.swift.org/swift-book/_static/stylesheets/application.css

@charset "utf-8";

html { font-size: 100%; text-size-adjust: 100%; }

body { margin: 0px; padding: 0px; }

ul, ol, li, dl, dt, dd, h1, h2, h3, h4, h5, h6, hgroup, p, blockquote, figu=
re, form, fieldset, input, legend, pre, abbr { margin: 0px; padding: 0px; }

pre, code, address, caption, th, figcaption { font-size: 1em; font-weight: =
normal; font-style: normal; }

fieldset, iframe, img { border: none; }

caption, th { text-align: left; }

table { border-collapse: collapse; border-spacing: 0px; }

article, aside, footer, header, nav, main, section, summary, details, hgrou=
p, figure, figcaption { display: block; }

audio, canvas, video, progress { display: inline-block; vertical-align: bas=
eline; }

button { font: inherit; vertical-align: middle; }

.highlight { background: rgb(255, 255, 255); }

.highlight .c, .highlight .cm, .highlight .cp, .highlight .c1, .highlight .=
cs { color: rgb(0, 116, 0); }

.highlight .k, .highlight .kc, .highlight .kd, .highlight .kp, .highlight .=
kr, .highlight .nb { color: rgb(170, 13, 145); }

.highlight .kt { color: rgb(63, 110, 116); }

.highlight .err { color: rgb(166, 23, 23); }

.highlight .o { font-weight: bold; }

.highlight .gd { color: rgb(0, 0, 0); background-color: rgb(255, 221, 221);=
 }

.highlight .gd .x { color: rgb(0, 0, 0); background-color: rgb(255, 170, 17=
0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(170, 0, 0); }

.highlight .gh { color: rgb(153, 153, 153); }

.highlight .gi { color: rgb(0, 0, 0); background-color: rgb(221, 255, 221);=
 }

.highlight .gi .x { color: rgb(0, 0, 0); background-color: rgb(170, 255, 17=
0); }

.highlight .go { color: rgb(136, 136, 136); }

.highlight .gp { color: rgb(85, 85, 85); }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(170, 170, 170); }

.highlight .gt { color: rgb(170, 0, 0); }

.highlight .m, .highlight .mf, .highlight .mh, .highlight .mi, .highlight .=
mo { color: rgb(28, 0, 207); }

.highlight .s { color: rgb(196, 26, 22); }

.highlight .na { color: teal; }

.highlight .nc { color: rgb(92, 38, 153); }

.highlight .no { color: teal; }

.highlight .ni { color: purple; }

.highlight .ne { color: rgb(153, 0, 0); }

.highlight .nn { color: rgb(85, 85, 85); }

.highlight .nt { color: navy; }

.highlight .nv, .highlight .nf { color: rgb(63, 110, 116); }

.highlight .ow { font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .sb { color: rgb(221, 17, 68); }

.highlight .sc { color: rgb(221, 17, 68); }

.highlight .sd { color: rgb(221, 17, 68); }

.highlight .s2 { color: rgb(221, 17, 68); }

.highlight .se { color: rgb(221, 17, 68); }

.highlight .sh { color: rgb(221, 17, 68); }

.highlight .si { color: rgb(221, 17, 68); }

.highlight .sx { color: rgb(221, 17, 68); }

.highlight .sr { color: rgb(0, 153, 38); }

.highlight .s1 { color: rgb(221, 17, 68); }

.highlight .ss { color: rgb(153, 0, 115); }

.highlight .bp { color: rgb(153, 153, 153); }

.highlight .vc { color: teal; }

.highlight .vg { color: teal; }

.highlight .vi { color: teal; }

.highlight .il { color: rgb(0, 153, 153); }

*, ::before, ::after { box-sizing: border-box; }

html, body { height: 100%; }

body { font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", He=
lvetica, Arial, Verdana, sans-serif; font-size: 18px; line-height: 1.5; col=
or: rgb(51, 51, 51); font-weight: 300; }

body pre, body code { font-family: Menlo, Consolas, Monaco, "Courier New", =
monospace, serif; }

a:link { color: rgb(0, 136, 204); text-decoration: none; }

a:visited { color: rgb(119, 102, 204); }

a:active { color: rgb(0, 136, 204); }

a:hover { color: rgb(0, 136, 204); text-decoration: underline; }

p { margin-bottom: 1.5em; }

h1 { margin-bottom: 0.8em; font-size: 3em; font-weight: 300; line-height: 1=
; }

h1.active + .main-nav { border-top: 1px solid rgb(51, 51, 51); }

h2 { margin-bottom: 0.5em; font-size: 2.5em; font-weight: 300; line-height:=
 1; }

h3 { margin-bottom: 0.5em; font-size: 1.5em; font-weight: 300; line-height:=
 1; }

h4 { margin-bottom: 0.5em; font-size: 1.25em; font-weight: 300; line-height=
: 1.2; }

h5 { margin-bottom: 0.5em; font-size: 1.175em; font-weight: 500; line-heigh=
t: 1.4; }

h6 { margin-bottom: 0.5em; font-size: 1em; font-weight: 700; line-height: 1=
.5; }

pre { font-size: 14px; line-height: 18px; border-left: 3px solid rgb(239, 8=
1, 56); margin: 0.5em 0.5em 1.5em 10px; padding: 0.5em 0.5em 0.5em 1em; ove=
rflow: scroll; }

p > code, li > code, dd > code, blockquote > code, td > code { color: rgb(0=
, 0, 0); padding: 3px 8px; font-size: 14px; white-space: nowrap; border: 1p=
x solid rgb(229, 229, 229); background-color: rgb(247, 247, 247); }

hr { border-right: none; border-bottom: none; border-left: none; border-ima=
ge: initial; border-top: 1px solid rgb(243, 243, 243); margin: 2em 0px; }

hr:last-child { display: none; }

details { margin-bottom: 2em; }

details :first-child { margin-top: 1.5em; }

cite { display: block; }

cite::before { content: "=E2=80=94 "; }

#logo { text-indent: -9999px; height: 48px; width: 100%; margin-top: 20px; =
margin-bottom: 0.5em; padding-bottom: 10px; }

#logo a { display: block; width: 190px; height: 48px; background-image: url=
("../images/swift.svg"); background-repeat: no-repeat; background-size: 190=
px 48px; background-position-x: -8px; }

nav[role=3D"navigation"] { width: 250px; position: fixed; overflow: scroll;=
 left: 0px; top: 0px; bottom: 0px; background: rgb(250, 250, 250); border-r=
ight: 1px solid rgb(230, 230, 230); padding: 20px 30px; }

nav[role=3D"navigation"] ul { border-top: 1px solid rgb(230, 230, 230); fon=
t-weight: 400; margin-bottom: 30px; list-style: none; }

nav[role=3D"navigation"] ul ul { list-style: none; }

nav[role=3D"navigation"] ul li { border-bottom: 1px solid rgb(230, 230, 230=
); }

nav[role=3D"navigation"] ul li.active { border-bottom: 1px solid rgb(51, 51=
, 51); }

nav[role=3D"navigation"] ul li.active a { font-weight: 700; }

nav[role=3D"navigation"] ul li a:link { color: rgb(51, 51, 51); text-decora=
tion: none; text-transform: uppercase; letter-spacing: 1px; font-size: 12px=
; display: block; padding: 10px; }

nav[role=3D"navigation"] ul li a:visited { color: rgb(51, 51, 51); }

nav[role=3D"navigation"] ul li a:active { font-weight: 700; }

nav[role=3D"navigation"] ul li a:hover { color: rgb(0, 136, 204); }

nav[role=3D"navigation"] ul li ul { margin-bottom: 10px; border-top: none; =
}

nav[role=3D"navigation"] ul li ul li { border-bottom: none; padding: 0.1em;=
 }

nav[role=3D"navigation"] ul li ul li.active { border-bottom: none; }

nav[role=3D"navigation"] ul li ul li.active a { font-weight: 700; }

nav[role=3D"navigation"] ul li ul a:link { color: rgb(0, 136, 204); text-de=
coration: none; text-transform: none; letter-spacing: 0px; font-size: 12px;=
 display: block; margin-left: 15px; padding: 0px 0px 3px; border-bottom: no=
ne; font-weight: 300; }

nav[role=3D"navigation"] ul li ul a:hover { text-decoration: underline; }

nav[role=3D"navigation"] h2 { font-size: 0.75em; font-weight: 600; text-tra=
nsform: lowercase; font-variant: small-caps; color: rgb(153, 153, 153); pad=
ding-bottom: 0.5em; }

main { max-width: 798px; min-width: 320px; margin-left: 250px; padding: 35p=
x 30px 0px; min-height: 100%; height: auto !important; }

footer[role=3D"contentinfo"] { background: rgb(51, 51, 51); color: white; p=
adding: 20px 30px; margin-left: 250px; min-height: 74px; }

footer[role=3D"contentinfo"] p { font-size: 0.625em; color: rgb(204, 204, 2=
04); line-height: 1em; margin-bottom: 1em; }

footer[role=3D"contentinfo"] p.privacy a { color: rgb(204, 204, 204); borde=
r-right: 1px solid rgb(204, 204, 204); margin-right: 6px; padding-right: 8p=
x; }

footer[role=3D"contentinfo"] p.privacy a:last-child { border: none; margin:=
 0px; padding: 0px; }

footer[role=3D"contentinfo"] aside { position: relative; width: 100%; max-w=
idth: 700px; margin-right: 68px; }

footer[role=3D"contentinfo"] aside i { width: 16px; height: 16px; backgroun=
d-repeat: no-repeat; background-size: 16px; display: block; margin-left: 1e=
m; float: right; text-indent: -5000em; }

footer[role=3D"contentinfo"] aside i.twitter { background-image: url("../im=
ages/icon-twitter.svg"); }

footer[role=3D"contentinfo"] aside i.feed { background-image: url("../image=
s/icon-feed.svg"); }

article:first-of-type { padding-bottom: 36px; }

article h2 { padding-top: 1.1em; }

article h3 { padding-top: 1em; }

article h4 { padding-top: 1em; border-bottom: 1px solid rgb(243, 243, 243);=
 padding-bottom: 0.5em; }

article h5 { margin-top: 1em; }

article header { width: 100%; display: inline-block; padding-bottom: 3em; }

article header h1 { padding-bottom: 0.125em; }

article header .byline { float: left; font-size: 14px; margin-left: 3em; }

article header .byline img { width: 32px; height: 32px; border-radius: 50%;=
 border: 1px solid rgb(204, 204, 204); position: absolute; margin-right: 0.=
25em; margin-top: -6px; }

article header .byline span { padding-left: 42px; }

article header time { float: left; text-transform: uppercase; font-size: 14=
px; font-weight: 400; color: rgb(170, 170, 170); }

article header .tags { display: block; font-size: 12px; font-weight: 400; m=
argin-top: 0px; }

article:not(:first-of-type) { border-top: 1px solid rgb(230, 230, 230); pad=
ding: 36px 0px; }

article blockquote { border-left: 3px solid rgb(195, 195, 195); margin: 0.5=
em 0.5em 1.5em 10px; padding: 0.5em 0.5em 0.5em 1em; color: rgb(51, 51, 51)=
; }

article ul, article ol { padding-left: 40px; margin: 1em 0px; }

article ul ul, article ul ol, article ol ul, article ol ol { margin: 0px; }

article ul { list-style: disc; }

article ul ul { list-style: circle; }

article ul ul ul { list-style: square; }

article ol { list-style: decimal; }

article dl { margin: 2em 0px 1em; }

article dl dt { display: block; }

article dl dd { margin: 0px 0px 1em 1em; }

article table { width: auto; min-width: 68%; margin: 2em auto 3em; border-c=
ollapse: separate; border: 1px solid rgb(227, 227, 227); }

article table th { background: rgb(250, 250, 250); font-weight: 700; text-a=
lign: center; }

article table th, article table td { padding: 0.5em 1.5em; border-bottom: 1=
px solid rgb(243, 243, 243); }

article table th:not(:first-child), article table td:not(:first-child) { bo=
rder-left: 1px solid rgb(243, 243, 243); }

article table tr:last-child td { border-bottom: none; }

article details { margin-top: 0px; cursor: pointer; }

article details summary { padding-bottom: 0.5em; outline: none; margin-top:=
 0px; }

article details summary::after { content: "Expand"; text-transform: lowerca=
se; font-variant: small-caps; border-bottom: 1px dashed rgb(204, 204, 204);=
 }

article details[open] summary::after { content: "Collapse"; }

article details[open] :not(summary) { cursor: auto; }

article details.download { margin-top: 0px; cursor: pointer; }

article details.download summary { padding-bottom: 0.5em; outline: none; ma=
rgin-top: 0px; }

article details.download summary::after { content: none; text-transform: lo=
wercase; font-variant: small-caps; border-bottom: 1px dashed rgb(204, 204, =
204); }

article details.download[open] summary::after { content: none; }

article details.download[open] :not(summary) { cursor: auto; }

article > details { margin-left: 40px; }

article .good pre, article pre.good { background: rgb(230, 255, 229); borde=
r-color: rgb(192, 255, 188); }

article .good pre::before, article pre.good::before { content: "=E2=9C=85";=
 float: right; }

article .bad pre, article pre.bad { background: rgb(249, 226, 228); border-=
color: rgb(246, 183, 190); }

article .bad pre::before, article pre.bad::before { content: "=E2=9B=94=EF=
=B8=8F"; float: right; }

article footer { margin: 4em 0px 0px; padding: 1.5em 0px 1em; border-top: 1=
px solid rgb(243, 243, 243); }

article footer::after { content: ""; display: table; clear: both; }

article footer nav [rel=3D"prev"] { width: 45%; float: left; text-align: le=
ft; }

article footer nav [rel=3D"prev"]::before { content: "=E2=86=90 "; }

article footer nav [rel=3D"next"] { width: 45%; float: right; text-align: r=
ight; }

article footer nav [rel=3D"next"]::after { content: " =E2=86=92"; }

.title a:link, .title a:visited { color: rgb(51, 51, 51); }

.alert, .success, .info, .warning, .danger { border-width: 1px; border-styl=
e: solid; padding: 0.5em; margin: 0.5em 0px 1.5em; }

.alert p:first-child, .success p:first-child, .info p:first-child, .warning=
 p:first-child, .danger p:first-child { margin-top: 0px; }

.alert p:last-child, .success p:last-child, .info p:last-child, .warning p:=
last-child, .danger p:last-child { margin-bottom: 0px; }

.alert code, .success code, .info code, .warning code, .danger code { borde=
r: none; background: transparent; padding: 0px; }

code { white-space: pre-line; }

pre code { white-space: inherit; }

pre code .graphic { font-size: 19px; line-height: 0; }

pre code .commentary, pre code .graphic { font-family: "Helvetica Neue", He=
lvetica, Arial, Verdana, sans-serif; }

@supports (overflow: -webkit-marquee) and (justify-content: inherit) {
  .alert::before, .success::before, .info::before, .warning::before, .dange=
r::before { font-size: 1em; float: left; clear: left; padding-left: 0.125em=
; width: 2em; }
  .alert p, .success p, .info p, .warning p, .danger p { padding-left: 2em;=
 }
  .success::before { content: "=E2=9C=85"; }
  .info::before { content: "=E2=84=B9=EF=B8=8F"; }
  .warning::before { content: "=E2=9A=A0=EF=B8=8F"; }
  .danger::before { content: "=E2=9D=97=EF=B8=8F"; }
}

.success { border-color: rgb(20, 158, 57); background-color: rgb(224, 255, =
232); }

.info { border-color: rgb(19, 156, 254); background-color: rgb(222, 240, 25=
3); }

.warning { border-color: rgb(255, 255, 16); background-color: rgb(255, 255,=
 235); }

.danger { border-color: rgb(213, 0, 27); background-color: rgb(254, 225, 22=
6); }

table.downloads { width: 100%; table-layout: fixed; }

table.downloads th { font-size: 0.75em; }

table.downloads .platform { width: 40%; }

table.downloads .download { width: 60%; }

table.downloads .download a.debug, table.downloads .download a.signature { =
font-size: 0.7em; display: block; }

table.downloads .download a { font-weight: 700; font-size: 1em; }

table.downloads .download a:not([download]) { font-weight: 400; }

table.downloads .download a:not([download])::before { content: "("; }

table.downloads .download a:not([download])::after { content: ")"; }

article input.detail[type=3D"checkbox"] { visibility: hidden; cursor: point=
er; height: 0px; width: 100%; margin-bottom: 2em; display: block; font-size=
: inherit; font-style: inherit; font-weight: inherit; font-family: inherit;=
 position: relative; top: -0.85rem; }

article p + input.detail[type=3D"checkbox"] { margin-top: auto; }

article .screenonly { display: none; }

@media screen {
  article .screenonly { display: inherit; }
  article input.detail[type=3D"checkbox"]::before { content: "=E2=96=B6 "; =
visibility: visible; font-size: 80%; }
  article input.detail[type=3D"checkbox"]::after { text-transform: lowercas=
e; font-variant: small-caps; border-bottom: 1px dashed rgb(204, 204, 204); =
color: rgb(102, 102, 102); content: "More detail"; visibility: visible; }
  article input.detail[type=3D"checkbox"]:checked::before { content: "=E2=
=96=BC "; }
  article input.detail[type=3D"checkbox"]:checked::after { content: "Less d=
etail"; }
  article input.detail[type=3D"checkbox"] + .more { transition: opacity 0.5=
s ease 0s, max-height 0.5s ease 0s; }
  article input.detail[type=3D"checkbox"]:checked + .more { visibility: vis=
ible; max-height: 1000rem; }
  article input.detail[type=3D"checkbox"]:not(:checked) + .more { overflow:=
 hidden; max-height: 0px; opacity: 0; }
}

article .more > p:first-of-type { margin-top: 0px; }

@media only screen and (max-width: 767px) {
  nav[role=3D"navigation"] { width: 100%; position: relative; background: r=
gb(250, 250, 250); border-bottom: 1px solid rgb(230, 230, 230); border-righ=
t: none; padding: 20px 30px; overflow: hidden; }
  nav[role=3D"navigation"].open > * { display: block; }
  nav[role=3D"navigation"] > h2, nav[role=3D"navigation"] ul { display: non=
e; }
  .menu-toggle { float: right; content: " "; height: 20px; width: 20px; bac=
kground-image: url("../images/icon-close.svg"); background-repeat: no-repea=
t; background-position: center center; background-size: 21px 21px; margin-t=
op: -48px; margin-right: 12px; cursor: pointer; }
  .menu-toggle.open { background-image: url("../images/icon-menu.svg"); }
  #logo a { width: 198px; margin: 0px auto; }
  main { max-width: 100%; min-width: 320px; margin-left: 0px; padding: 30px=
 30px 0px; }
  footer[role=3D"contentinfo"] { margin-left: 0px; }
  h1 { font-size: 48px; font-weight: 200; line-height: 1; }
  h2 { font-size: 40px; font-weight: 300; line-height: 1.1; }
  h3 { font-size: 38px; font-weight: 300; line-height: 1.1; }
  h4 { font-size: 36px; font-weight: 300; line-height: 1.2; }
  h5 { font-size: 24px; font-weight: 500; line-height: 1.4; }
  h6 { font-size: 18px; font-weight: 700; line-height: 1.5; }
  table.downloads { border: 1px solid rgb(243, 243, 243); }
  table.downloads, table.downloads thead, table.downloads tbody, table.down=
loads th, table.downloads td, table.downloads tr { display: block !importan=
t; }
  table.downloads thead tr { position: absolute; top: -9999px; left: -9999p=
x; }
  table.downloads tr { border: 1px solid rgb(243, 243, 243); }
  table.downloads td { position: relative; padding-left: 35%; border-left: =
none !important; border-right: none !important; border-bottom: 1px solid rg=
b(243, 243, 243) !important; width: 100% !important; }
  table.downloads td::before { position: absolute; top: 0.5em; left: 0.5em;=
 width: 27.5%; padding-right: 10px; white-space: nowrap; text-align: right;=
 }
  table.downloads td.platform::before { content: "Platform"; }
  table.downloads td.download::before { content: "Download"; top: 1em; }
  table.downloads td.date::before { content: "Date"; }
}

@media only print {
  html body { background: white; font-size: 12pt; padding: 0.5in; }
  html body * { -webkit-print-color-adjust: exact; }
  a { color: black !important; text-decoration: underline !important; }
  h1, h2, h3, h4, h5, h6, p, article > div, pre, table { break-inside: avoi=
d; }
  details:not([open]) { visibility: visible; }
  details:not([open]) summary { display: none !important; }
  details:not([open]) > *, details:not([open]) { display: block; }
  .alert, .success, .info, .warning, .danger { margin: 1.5em 0px; }
  main { width: auto; padding: 0px; border: 0px; color: black; background: =
transparent; margin: 0px; max-width: 100%; min-height: 1in; float: none !im=
portant; }
  nav[role=3D"navigation"] { background: transparent; border: none; width: =
auto; position: static; padding: 0px; }
  nav[role=3D"navigation"] h2, nav[role=3D"navigation"] ul { display: none;=
 }
  nav[role=3D"navigation"] #logo { position: static; margin-bottom: 1.5em; =
}
  nav[role=3D"navigation"] #logo a { background-position: -15px center; }
  footer[role=3D"contentinfo"] { display: none; }
}
------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.swift.org/swift-book/_static/images/swift.svg

<?xml version=3D"1.0" encoding=3D"iso-8859-1"?>
<svg version=3D"1.1" id=3D"artwork" xmlns=3D"http://www.w3.org/2000/svg" xm=
lns:xlink=3D"http://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px"
	 width=3D"191.1856px" height=3D"59.3911px" viewBox=3D"0 0 191.1856 59.3911=
" enable-background=3D"new 0 0 191.1856 59.3911"
	 xml:space=3D"preserve">
<g>
	<g>
		<path fill=3D"#F05138" d=3D"M59.3867,16.4501c-0.0035-0.5973-0.0101-1.1943=
-0.0266-1.7923c-0.0348-1.3008-0.1117-2.6134-0.3429-3.9003
			c-0.2346-1.3069-0.6181-2.5221-1.2225-3.7093c-0.5933-1.1659-1.3689-2.2328=
-2.2941-3.158
			c-0.925-0.9252-1.9919-1.7007-3.1583-2.2943c-1.1862-0.6037-2.4016-0.9871-=
3.7073-1.2217
			c-1.2876-0.2319-2.6002-0.3083-3.902-0.3435c-0.5977-0.0162-1.1948-0.023-1=
.7923-0.0267C42.2315,0,41.5218,0,40.8128,0H25.0912
			h-6.5131c-0.7097,0-1.4186,0-2.1276,0.0041c-0.5977,0.0037-1.1955,0.0105-1=
.7923,0.0267
			c-0.3254,0.0088-0.6515,0.0202-0.9778,0.0359c-0.9788,0.0472-1.9591,0.1337=
-2.9243,0.3076
			c-0.9793,0.176-1.9079,0.4356-2.8113,0.8091C7.6437,1.3078,7.3453,1.445,7.=
0487,1.5959C6.1739,2.0411,5.3549,2.5886,4.61,3.2248
			c-0.2483,0.2121-0.4884,0.434-0.7196,0.6653c-0.9254,0.9252-1.701,1.9921-2=
.2943,3.158
			c-0.6044,1.1872-0.9874,2.4024-1.2222,3.7093c-0.231,1.2869-0.3078,2.5995-=
0.3428,3.9003
			c-0.0164,0.598-0.0233,1.195-0.0272,1.7923C-0.0006,17.1594,0,17.8689,0,18=
.5781V28.26v12.5525
			c0,0.7099-0.0007,1.4187,0.0039,2.1286c0.0039,0.5973,0.0108,1.1943,0.0272=
,1.7913c0.035,1.3015,0.1117,2.6144,0.3428,3.9007
			c0.2348,1.3065,0.6178,2.5228,1.2222,3.7097c0.5933,1.1662,1.3689,2.2328,2=
.2943,3.1576c0.9247,0.9256,1.9919,1.701,3.1584,2.295
			c1.1863,0.6038,2.4016,0.9867,3.7076,1.2213c1.2868,0.2316,2.6004,0.3086,3=
.9019,0.3434c0.5968,0.0159,1.1946,0.023,1.7923,0.0264
			c0.709,0.0051,1.4179,0.0044,2.1276,0.0044h22.2346c0.709,0,1.4187,0.0007,=
2.1278-0.0044
			c0.5975-0.0034,1.1946-0.0105,1.7923-0.0264c1.3018-0.0348,2.6144-0.1119,3=
.902-0.3434c1.3057-0.2346,2.5211-0.6176,3.7073-1.2213
			c1.1664-0.5939,2.2333-1.3694,3.1583-2.295c0.9252-0.9249,1.7009-1.9914,2.=
2941-3.1576c0.6044-1.1869,0.9879-2.4031,1.2225-3.7097
			c0.2312-1.2863,0.3081-2.5992,0.3429-3.9007c0.0164-0.597,0.023-1.1939,0.0=
266-1.7913c0.0046-0.7099,0.0042-1.4187,0.0042-2.1286
			V18.5781C59.3909,17.8689,59.3912,17.1594,59.3867,16.4501z"/>
		<path fill=3D"#FFFFFF" d=3D"M47.0606,36.6607c-0.0014-0.0018-0.0027-0.0031=
-0.0042-0.0048c0.0657-0.2236,0.1335-0.4458,0.191-0.675
			c2.465-9.8209-3.5511-21.4319-13.7316-27.5454c4.4613,6.0479,6.4339,13.373=
3,4.6813,19.7795
			c-0.1563,0.5714-0.3442,1.1198-0.5519,1.6528c-0.2254-0.1481-0.5094-0.3162=
-0.8908-0.5265c0,0-10.1269-6.2527-21.1028-17.3122
			c-0.288-0.2903,5.8528,8.777,12.8219,16.1399c-3.2834-1.8427-12.4338-8.500=
4-18.2266-13.8023
			c0.7117,1.1869,1.5582,2.3298,2.4887,3.4301c4.8375,6.1349,11.1462,13.7044=
,18.7043,19.5169
			c-5.3104,3.2498-12.8141,3.5025-20.2852,0.0034c-1.8479-0.866-3.5851-1.910=
9-5.1932-3.0981
			c3.1625,5.0585,8.0332,9.4229,13.9613,11.9708c7.0695,3.0381,14.0996,2.832=
1,19.3356,0.0498l-0.0041,0.006
			c0.0239-0.0151,0.0543-0.0316,0.0791-0.0469c0.215-0.1156,0.4284-0.2333,0.=
6371-0.3576
			c2.5157-1.3058,7.4847-2.6306,10.1518,2.5588C50.7755,49.6699,52.1635,42.9=
395,47.0606,36.6607z"/>
	</g>
</g>
<g id=3D"XMLID_1_">
	<g>
		<path d=3D"M81.9306,38.5423c0.464,4.1203,4.3938,6.8217,9.8514,6.8217c5.18=
54,0,8.9239-2.7014,8.9239-6.4393
			c0-3.2203-2.2648-5.186-7.4776-6.4953l-5.0484-1.2825c-7.259-1.8013-10.534=
-5.0764-10.534-10.4792
			c0-6.6585,5.8127-11.2709,14.0819-11.2709c8.0226,0,13.7263,4.6392,13.9175=
,11.3257h-5.3212
			c-0.4098-4.0935-3.7391-6.6049-8.7327-6.6049c-4.94,0-8.3783,2.5382-8.3783=
,6.2493c0,2.8926,2.129,4.6124,7.3686,5.9497
			l4.2025,1.0913c8.1323,1.9926,11.4615,5.158,11.4615,10.8617c0,7.259-5.758=
5,11.8166-14.9278,11.8166
			c-8.5141,0-14.3268-4.5308-14.7634-11.5437H81.9306z"/>
		<path d=3D"M140.0488,49.4308h-5.3492l-6.2493-21.777h-0.109l-6.2219,21.777=
h-5.3486l-7.9142-28.5183h5.1848l5.5124,22.8963h0.1096
			l6.2219-22.8963h5.021l6.2767,22.8963h0.1096l5.5125-22.8963h5.13L140.0488=
,49.4308z"/>
		<path d=3D"M151.3891,13.2442c0-1.7185,1.4195-3.1106,3.1387-3.1106c1.7466,=
0,3.1655,1.3921,3.1655,3.1106
			c0,1.7197-1.4189,3.1387-3.1655,3.1387C152.8086,16.3829,151.3891,14.964,1=
51.3891,13.2442z M151.9353,20.9125h5.2122v28.5183
			h-5.2122V20.9125z"/>
		<path d=3D"M191.1856,25.1156v-4.2032h-5.5125v-6.8217h-5.1854v6.8217h-4.22=
99h-5.7335v-2.5102
			c0.0268-2.5382,1.0096-3.6027,3.3567-3.6027c0.7636,0,1.5279,0.0828,2.1558=
,0.1912v-4.0935
			c-0.9281-0.1364-1.774-0.218-2.7562-0.218c-5.5673,0-7.9142,2.3202-7.9142,=
7.6414v2.5918h-3.9839v4.2032h3.9839v24.3151h5.1848
			V25.1156h5.7067h4.2299v16.8381c0,5.5125,2.1016,7.6402,7.5592,7.6402c1.17=
35,0,2.5108-0.0816,3.1113-0.218v-4.2567
			c-0.355,0.0548-1.3922,0.1364-1.9651,0.1364c-2.4286,0-3.5199-1.1461-3.519=
9-3.7111V25.1156H191.1856z"/>
	</g>
</g>
</svg>=0A
------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.swift.org/swift-book/_static/images/icon-twitter.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/=
SVG/1.1/DTD/svg11.dtd">
<svg version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"ht=
tp://www.w3.org/1999/xlink" width=3D"16" height=3D"16" viewBox=3D"0 0 16 16=
">
<path fill=3D"#cccccc" d=3D"M16 3.038c-0.589 0.261-1.221 0.438-1.885 0.517 =
0.678-0.406 1.198-1.050 1.443-1.816-0.634 0.376-1.337 0.649-2.085 0.797-0.5=
99-0.638-1.452-1.037-2.396-1.037-1.813 0-3.283 1.47-3.283 3.282 0 0.257 0.0=
29 0.508 0.085 0.748-2.728-0.137-5.147-1.444-6.766-3.43-0.283 0.485-0.444 1=
.049-0.444 1.65 0 1.139 0.579 2.144 1.46 2.732-0.538-0.017-1.044-0.165-1.48=
7-0.411-0 0.014-0 0.027-0 0.041 0 1.59 1.132 2.917 2.633 3.219-0.275 0.075-=
0.565 0.115-0.865 0.115-0.212 0-0.417-0.021-0.618-0.059 0.418 1.304 1.63 2.=
253 3.066 2.28-1.123 0.88-2.539 1.405-4.077 1.405-0.265 0-0.526-0.016-0.783=
-0.046 1.453 0.931 3.178 1.475 5.032 1.475 6.038 0 9.34-5.002 9.34-9.34 0-0=
.142-0.003-0.284-0.010-0.425 0.642-0.463 1.198-1.041 1.638-1.699z"></path>
</svg>=0A
------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.swift.org/swift-book/_static/images/icon-feed.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/=
SVG/1.1/DTD/svg11.dtd">
<svg version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"ht=
tp://www.w3.org/1999/xlink" width=3D"16" height=3D"16" viewBox=3D"0 0 16 16=
">
<path fill=3D"#cccccc" d=3D"M2.13 11.733c-1.175 0-2.13 0.958-2.13 2.126 0 1=
.174 0.955 2.122 2.13 2.122 1.179 0 2.133-0.948 2.133-2.122-0-1.168-0.954-2=
.126-2.133-2.126zM0.002 5.436v3.067c1.997 0 3.874 0.781 5.288 2.196 1.412 1=
.411 2.192 3.297 2.192 5.302h3.080c-0-5.825-4.739-10.564-10.56-10.564zM0.00=
6 0v3.068c7.122 0 12.918 5.802 12.918 12.932h3.076c0-8.82-7.176-16-15.994-1=
6z"></path>
</svg>=0A
------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.swift.org/swift-book/_static/stylesheets/tspl.css

@charset "utf-8";

div.Swift { font-family: Menlo, monospace; font-size: 14px; line-height: 18=
px; margin: 0.5em 0.5em 1.5em 10px; padding: 0.5em 0.5em 0.5em 1em; overflo=
w: scroll; }

.code-sample { display: block; font-size: 1.4em; margin-left: 21px; }

.code-sample .code-lines { margin-left: 0px; }

.code-lines { counter-reset: li 0; line-height: 1.6em; list-style: none; ma=
rgin: 0px 0px 0px 20px; padding: 0px; }

.code-sample .code-lines li { list-style-type: none; margin: 0px; padding-r=
ight: 10px; }

.code-lines li { padding-left: 0px; text-indent: -13px; white-space: pre-wr=
ap; border-left: 18px solid transparent; }

.code-lines li::before { color: rgb(128, 128, 128); content: counter(li); c=
ounter-increment: li 1; font-family: Menlo, monospace; font-size: 0.9em; ma=
rgin-right: 16px; user-select: none; }

.code-sample .code-lines li::before { margin-left: -35px; margin-right: 25p=
x; }

.code-sample .code-lines li:nth-child(n+10)::before { margin-left: -43px; m=
argin-right: 25px; }

.code-sample .code-lines li:only-of-type::before { color: rgb(255, 255, 255=
); content: " "; }

.syntax-outline .code-lines li::before { content: " "; }

.syntax-outline .code-lines { line-height: 1.9em; }

.syntax-outline div.Swift { border-color: transparent; }

.code-sample div.Swift { width: 93%; margin-left: 13px; overflow: visible; =
}

div.Swift { border-left: 5px solid rgb(205, 233, 244); padding: 4px 0px 2px=
 10px; margin: 10px 0px 21px; line-height: 22px; }

.highlight .gi { background-color: rgb(233, 239, 250); border: 1px solid rg=
b(196, 212, 241); border-radius: 10px; color: rgb(0, 0, 0); padding: 2px 6p=
x; font-style: inherit; white-space: nowrap; }

.admonition.grammar { border-left: 5px solid rgb(233, 233, 233); margin: 20=
px 0px; padding-left: 15px; padding-bottom: 1px; font-size: 0.8em; backgrou=
nd: transparent; }

.admonition.grammar p.admonition-title { margin-bottom: 8px; }

.admonition.grammar p { margin: 0px; }

.admonition.grammar p.syntax-def { margin-left: 25px; text-indent: -25px; }

.admonition.grammar .syntax-def-name { color: rgb(128, 128, 128); font-styl=
e: italic; font-size: 15px; }

.admonition.grammar .arrow { padding: 0px 6px; }

.admonition.grammar code { border: 0px; background: transparent; font-size:=
 14px; font-weight: bold; padding: 0px 3px; }

.admonition.grammar a.syntax-def { font-size: 15px; font-style: italic; pad=
ding: 0px 3px; }

.admonition.grammar sub { color: rgb(128, 128, 128); font-size: 12px; font-=
style: italic; margin-left: -3px; padding-right: 5px; vertical-align: basel=
ine; position: relative; top: 0.3em; }

.admonition.grammar .syntax-group { margin-bottom: 10px; }

nav[role=3D"navigation"] h2 { font-size: 1em; color: rgb(51, 51, 51); paddi=
ng: 0px 12px 2px; }

nav[role=3D"navigation"] h2 div { font-weight: 100; padding-top: 3px; }

nav[role=3D"navigation"] ul li ul a:link { color: rgb(51, 51, 51); }

nav[role=3D"navigation"] ul li ul a.current:link { font-weight: bold; }

nav[role=3D"navigation"] .return { padding: 0px 0px 20px; text-indent: -18p=
x; margin-left: 18px; }

img.align-center { max-width: 100%; height: auto; margin: 10px auto; displa=
y: block; }

a.headerlink { display: none; }

body { background: rgb(255, 255, 255); }

p { margin-bottom: 1em; }

h2 { font-size: 2em; }

h3 { font-size: 1.4em; }

@media only screen and (max-width: 767px) {
  h2 { font-size: 2em; }
  h3 { font-size: 1.4em; }
}

.playground_link a { font-weight: bold; }

p > code.literal, li > code.literal, dt > code.literal, dd > code.literal {=
 background-color: transparent; border: none; padding: 0px; color: rgb(102,=
 102, 102); font-size: 0.9em; }

a > code.literal { background-color: transparent; border: none; padding: 0p=
x; font-size: 0.9em; }

article table { border-collapse: collapse; border-color: rgb(221, 221, 221)=
; }

article table th, article table td, article table th:not(:first-child), art=
icle table td:not(:first-child) { border-color: rgb(221, 221, 221); }

.admonition { margin-left: 34px; border-left: 5px solid rgb(204, 204, 204);=
 background-color: rgb(245, 245, 245); padding: 10px; font-size: 0.85em; ma=
rgin-bottom: 1.5em; }

.admonition-experiment { border-color: rgb(0, 136, 204); }

.admonition-beta { margin-top: 4em; clear: both; }

.admonition .admonition-title { text-transform: uppercase; color: rgb(119, =
119, 119); font-weight: normal; font-size: 0.7em; letter-spacing: 2px; marg=
in-bottom: 0.7em; }

.admonition .last { margin-bottom: 0px; }

nav[role=3D"navigation"].open ul { display: block; }

#bashful { position: fixed; left: 0px; top: 0px; width: 100%; margin: 0px; =
z-index: 10; }

#bashful .inner { position: relative; width: 100%; max-width: 985px; }

#jump_to { position: absolute; right: 15px; }

#jump_to_toggle { display: block; float: right; background: url("../images/=
icon-caret-sm.svg") right 1px no-repeat rgb(250, 250, 250); border-right: 1=
px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230); b=
order-left: 1px solid rgb(230, 230, 230); border-image: initial; border-top=
: none; padding: 5px 27px 5px 8px; color: rgb(51, 51, 51); font: 12px/14px =
Helvetica, Arial, Verdana, sans-serif; letter-spacing: 1px; text-transform:=
 uppercase; height: 25px; cursor: pointer; }

#jump_to.open #jump_to_toggle { border-bottom-color: rgb(250, 250, 250); ba=
ckground-image: url("../images/icon-close-sm.svg"); }

#jump_to menu { display: none; }

#jump_to.open menu { display: block; margin: 24px 0px 0px; padding: 0px 15p=
x; background: rgb(250, 250, 250); border: 1px solid rgb(230, 230, 230); wi=
dth: 300px; font-size: 12px; line-height: 15px; color: rgb(102, 102, 102); =
}

#jump_to menu ul { list-style: none; margin: 15px 0px; padding: 0px; }

#jump_to menu ul ul { margin: 0px; }

#jump_to menu ul a { display: none; }

#jump_to menu ul ul a { display: inline; color: rgb(51, 51, 51); }

#jump_to menu ul ul ul { display: none; padding-left: 15px; margin-bottom: =
10px; }

#jump_to menu ul ul ul ul { display: none; }

#jump_to menu ul ul li { margin: 6px 0px; }

#jump_to_overlay { position: fixed; display: none; width: 100%; height: 100=
%; top: 0px; left: 0px; background-color: transparent; z-index: 5; cursor: =
default; }

.next_previous p { display: inline; margin: 0px; }

.next_previous .previous a { float: left; padding: 0px 25px; background: ur=
l("../images/icon-next_previous.svg") 0px 3px no-repeat; display: block; }

.next_previous .next a { float: right; padding: 0px 25px; background: url("=
../images/icon-next_previous.svg") right -18px no-repeat; display: block; }

footer { margin-top: 4em; clear: both; }

@media only screen and (max-width: 767px) {
  #jump_to, #bashful { display: none; }
  .code-sample { margin-left: 10px; }
  .admonition { margin-left: 23px; }
}
------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.swift.org/swift-book/_static/images/icon-caret-sm.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!-- Generator: Adobe Illustrator 15.1.0, SVG Export Plug-In . SVG Version:=
 6.00 Build 0)  -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/=
SVG/1.1/DTD/svg11.dtd">
<svg version=3D"1.1" id=3D"Layer_1" xmlns=3D"http://www.w3.org/2000/svg" xm=
lns:xlink=3D"http://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px"
	 width=3D"21px" height=3D"21px" viewBox=3D"0 0 21 21" enable-background=3D=
"new 0 0 21 21" xml:space=3D"preserve">
<title>icon-close</title>
<desc>Close Icon</desc>
<g id=3D"Container">
	<g id=3D"icon-close">
		<path id=3D"Line-Copy-8" fill=3D"none" stroke=3D"#333333" stroke-linecap=
=3D"square" d=3D"M7.002,8.338l3.655,3.655"/>
		<path id=3D"Line-Copy-7" fill=3D"none" stroke=3D"#333333" stroke-linecap=
=3D"square" d=3D"M10.657,11.993l3.655-3.655"/>
	</g>
</g>
</svg>

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.swift.org/swift-book/_static/images/icon-next_previous.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!-- Generator: Adobe Illustrator 15.1.0, SVG Export Plug-In . SVG Version:=
 6.00 Build 0)  -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/=
SVG/1.1/DTD/svg11.dtd">
<svg version=3D"1.1" id=3D"Layer_1" xmlns=3D"http://www.w3.org/2000/svg" xm=
lns:xlink=3D"http://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px"
	 width=3D"21px" height=3D"41.918px" viewBox=3D"0 0 21 41.918" enable-backg=
round=3D"new 0 0 21 41.918" xml:space=3D"preserve">
<title>icon-close</title>
<desc>Close Icon</desc>
<g id=3D"Container">
	<g id=3D"icon-close">
		<path id=3D"Line-Copy-8" fill=3D"none" stroke=3D"#333333" stroke-linecap=
=3D"square" d=3D"M7.005,10.5l5.5,5.813"/>
		<path id=3D"Line-Copy-7" fill=3D"none" stroke=3D"#333333" stroke-linecap=
=3D"square" d=3D"M7.005,10.5l5.5-5.5"/>
	</g>
</g>
<g id=3D"Container_1_">
	<g id=3D"icon-close_1_">
		<path id=3D"Line-Copy-8_1_" fill=3D"none" stroke=3D"#333333" stroke-linec=
ap=3D"square" d=3D"M8.006,37.347l5.5-5.813"/>
		<path id=3D"Line-Copy-7_1_" fill=3D"none" stroke=3D"#333333" stroke-linec=
ap=3D"square" d=3D"M8.006,26.033l5.5,5.5"/>
	</g>
</g>
</svg>

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://docs.swift.org/swift-book/_images/CollectionTypes_intro_2x.png

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
YAAAOpgAABdvkl/FRgAAAwBQTFRFAAAA////Ix8gKSUmKycoLiorMCwtkZCRAAABAwMEkpKVsbGz
6enq5eXm2trb2NjZzMzNycnKv7/Aurq7rKytqKippKSlkpOWkZKV+fr9lpeZuLm7tba4paaoo6Sm
mJmb+/z+ycrM6O737/P5kZOWTH6/TX/AT4DAUoLBU4PCVITCV4bDWYfEXInFXYrFX4zGa5TKdpzO
k7HYrMPivM7nxNTq7PH49Pf7W4nEY4/Hg6bToLvdtMnkwdPpx9frytnszdvt0t/v2OPx3efz4er1
4+v15ez1oKKkk5WXn6Chm5yd/P3+4+TlxMXGvL2+s7S1qaqrMz1BJy8ye5WdSVhdHSMluuDstNnl
hqGqaoCHn7/Jr9HcQk9Tla62kZ2hjJWYrK+wICcpc4uSUWJnY3d9IyosrMvUiI+RWm1yOkZJKjM1
ydPV1ODi4O7wAQICAgMDBgcHDQ4OEhMTGxwcfn9//v//8/T05ufn5ebm1NXV0NHRwsPDoqOjkpOT
iImJhIWFHiAfOj07Zmlni5KNn7SjanxtiqGOSVVLJColv97EdYh4Jy0ot9O8s8y3wuLHweHGgJWD
VWNXvNrAKzIsqcOtk6uWAQIBAwQDCQoJCwwLAgIBMjIxQUFAEA4LjImFkIyHa1xMLigh0riclpCJ
BQQDDAoI9dKu8c+rzrCSt52CjXlkNy8n/dm0/Ni0+9ez37+fo4x0fmxaVEg8PzYt99Wx+de08dGv
6cmp8NCw7s6uHxsXCAcG28Gnh4WDSj81waqUJiAbFxMQqZqT9KiU76eU5qWU1qGUwZ2VBAMDJSQk
dXR0lpWV/v7+/f39+/v79/f37+/v7Ozs5+fn5ubm5eXl4+Pj4uLi4ODg39/f3d3d19fX09PTz8/P
x8fHt7e3r6+vp6enn5+fl5eXlJSUj4+Pi4uLh4eHgoKCgICAe3t7eHh4cXFxbGxsYWFhWFhYUlJS
TU1NSEhIODg4Li4uKioqKCgoICAgGBgYFRUVEBAQCAgIBwcHBQUFBAQEAQEB////hLOQDAAAAQB0
Uk5T////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////AFP3ByUAAIreSURBVHja7J13YJPV+se/J3u2
6WSJ7CEgdAIKCKgoouBVrwuvGwRREWiLbArI0JYhKjId1633d70CCooDBITSkZZNKXu3TVeSZuf9
/ZG0TZO2NGkLafp8/oC3533PmzfPOe83z1nPYQwEQRCEt/DIBARBECSeBEEQJJ4EQRAkngRBECSe
BEEQJJ4EQRAEiSdBEASJJ0EQBIknQRAEiSdBEASJJ0EQBOENghrS+gvtZWaObNN4iIW8ktMNuUHr
diKdkYoEAF8il/zR8NvcbdQbbWRNoj4wkVBuOVBDukdgkP6CYgvZq/Ffelmpz/LZunOJmSxYhSLk
z4bdYHixjqxIePf+Cg9cVzyHFZWTpZrG/Qzd7eOrbigk61WvtRGqn33PPaqkgJx4wlskYbvcBdVN
POMKycdpImz62y74ku+uq3oynht6Hr/UZz9eUkAGJLzGqut0pXqK24DRsDI7Wamp4PLjfPE7r1Hf
nCcFoem+Zm1D2kn49P5q76rL8+xsoe7OJnU+lSVe+0kK8jtrwvzbFd8yDioi4xG+qaep4+XaPc9g
I1moKbG09jpLZ+rvrBljf5+y9S8h0xG+/mJba2+2d6axoiamcIS3jie967VgsvqUzWoi0xG+oo2v
VTzbUO9aUzv+3rbB29H4XW3YbmAuggAAiBJrE08aLGpyyhO9u56KpFb0nX3IFE89yEQDsKfWJp40
+63JMaR6dXkiiWfttPchj4zMRjTE+am12U7jkE3f1vRumCP1Zv+e8RQRSqXCPyMg6G5QHoKo0b9s
Hp5na7vd3jowrO/l4PnN7aLjB6my96nvaWuN5NN705wQ2R2EdGijdExG1OXlRdZ2dWgd54hqVBul
FDSHJxYH7QFsChonvdHa2SYuFUAqcHr4NfeRK357oJAcOT/ldMV/icgqrG0STaQMpitkK59pFuIp
+hnAuWgSzxuMfOdO9JfolWfO4c/BV93P/gbcQeLp76QCIy7WsvTF+DfuJgsFuHiqAADBWiquGwor
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

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://docs.swift.org/swift-book/_images/setVennDiagram_2x.png

iVBORw0KGgoAAAANSUhEUgAABGIAAANTCAMAAADSbEsrAAAACXBIWXMAAAsTAAALEwEAmpwYAAA4
K2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0w
TXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRh
LyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMwNjcgNzkuMTU3NzQ3LCAyMDE1LzAzLzMw
LTIzOjQwOjQyICAgICAgICAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMu
b3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJk
ZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFw
LzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMv
MS4xLyIKICAgICAgICAgICAgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bo
b3Rvc2hvcC8xLjAvIgogICAgICAgICAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
bS94YXAvMS4wL21tLyIKICAgICAgICAgICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5j
b20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgICAgICAgICAgeG1sbnM6dGlmZj0i
aHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0
dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIj4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5B
ZG9iZSBQaG90b3Nob3AgQ0MgMjAxNSAoTWFjaW50b3NoKTwveG1wOkNyZWF0b3JUb29sPgogICAg
ICAgICA8eG1wOkNyZWF0ZURhdGU+MjAxNi0wNS0wNFQxMDozOTozNi0wNzowMDwveG1wOkNyZWF0
ZURhdGU+CiAgICAgICAgIDx4bXA6TW9kaWZ5RGF0ZT4yMDE2LTA1LTA0VDEwOjQyOjI0LTA3OjAw
PC94bXA6TW9kaWZ5RGF0ZT4KICAgICAgICAgPHhtcDpNZXRhZGF0YURhdGU+MjAxNi0wNS0wNFQx
MDo0MjoyNC0wNzowMDwveG1wOk1ldGFkYXRhRGF0ZT4KICAgICAgICAgPGRjOmZvcm1hdD5pbWFn
ZS9wbmc8L2RjOmZvcm1hdD4KICAgICAgICAgPHBob3Rvc2hvcDpDb2xvck1vZGU+MjwvcGhvdG9z
aG9wOkNvbG9yTW9kZT4KICAgICAgICAgPHhtcE1NOkluc3RhbmNlSUQ+eG1wLmlpZDo0NmM5OGFm
Yi1lNjUwLTQ5NDMtYmIxZC05NTY2ZTY1OWQ2YWE8L3htcE1NOkluc3RhbmNlSUQ+CiAgICAgICAg
IDx4bXBNTTpEb2N1bWVudElEPnhtcC5kaWQ6NDZjOThhZmItZTY1MC00OTQzLWJiMWQtOTU2NmU2
NTlkNmFhPC94bXBNTTpEb2N1bWVudElEPgogICAgICAgICA8eG1wTU06T3JpZ2luYWxEb2N1bWVu
dElEPnhtcC5kaWQ6NDZjOThhZmItZTY1MC00OTQzLWJiMWQtOTU2NmU2NTlkNmFhPC94bXBNTTpP
cmlnaW5hbERvY3VtZW50SUQ+CiAgICAgICAgIDx4bXBNTTpIaXN0b3J5PgogICAgICAgICAgICA8
cmRmOlNlcT4KICAgICAgICAgICAgICAgPHJkZjpsaSByZGY6cGFyc2VUeXBlPSJSZXNvdXJjZSI+
CiAgICAgICAgICAgICAgICAgIDxzdEV2dDphY3Rpb24+Y3JlYXRlZDwvc3RFdnQ6YWN0aW9uPgog
ICAgICAgICAgICAgICAgICA8c3RFdnQ6aW5zdGFuY2VJRD54bXAuaWlkOjQ2Yzk4YWZiLWU2NTAt
NDk0My1iYjFkLTk1NjZlNjU5ZDZhYTwvc3RFdnQ6aW5zdGFuY2VJRD4KICAgICAgICAgICAgICAg
ICAgPHN0RXZ0OndoZW4+MjAxNi0wNS0wNFQxMDozOTozNi0wNzowMDwvc3RFdnQ6d2hlbj4KICAg
ICAgICAgICAgICAgICAgPHN0RXZ0OnNvZnR3YXJlQWdlbnQ+QWRvYmUgUGhvdG9zaG9wIENDIDIw
MTUgKE1hY2ludG9zaCk8L3N0RXZ0OnNvZnR3YXJlQWdlbnQ+CiAgICAgICAgICAgICAgIDwvcmRm
OmxpPgogICAgICAgICAgICA8L3JkZjpTZXE+CiAgICAgICAgIDwveG1wTU06SGlzdG9yeT4KICAg
ICAgICAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4KICAgICAgICAgPHRp
ZmY6WFJlc29sdXRpb24+NzIwMDAwLzEwMDAwPC90aWZmOlhSZXNvbHV0aW9uPgogICAgICAgICA8
dGlmZjpZUmVzb2x1dGlvbj43MjAwMDAvMTAwMDA8L3RpZmY6WVJlc29sdXRpb24+CiAgICAgICAg
IDx0aWZmOlJlc29sdXRpb25Vbml0PjI8L3RpZmY6UmVzb2x1dGlvblVuaXQ+CiAgICAgICAgIDxl
eGlmOkNvbG9yU3BhY2U+NjU1MzU8L2V4aWY6Q29sb3JTcGFjZT4KICAgICAgICAgPGV4aWY6UGl4
ZWxYRGltZW5zaW9uPjExMjI8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpQ
aXhlbFlEaW1lbnNpb24+ODUxPC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgPC9yZGY6RGVz
Y3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
Cjw/eHBhY2tldCBlbmQ9InciPz6NLTTeAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAA
ADqYAAAXb5JfxUYAAAMAUExURQAAAP///35/f+/w8Ovs7Onq6ufo6OPk5OHi4t/g4N3e3tna2tfY
2NLT09HS0tDR0c/Q0MrLy8nKysjJycfIyMTFxcPExMDBwb/AwLu8vLq7u7S1tbO0tLKzs7GysrCx
sa+wsK6vr6ytrausrKipqaeoqKanp6WmpqSlpaOkpKKjo6GioqChoZ+goJ2enpydnZucnJqbm5ma
mpiZmZeYmJaXl5WWlpSVlZOUlJKTk5GSkpCRkY+QkI6Pj42OjoyNjYuMjIqLi4mKioiJiYeIiIaH
h4WGhoSFhYOEhIKDg4GCgoCBgX+AgIKEg4CCgYeMiYWKh4uRjYiOioaJh4SHhYOGhCUsJ4yTjpaj
mY6WkI2Vj4WJhoSIhaS3qJyqn5mnnI+YkT9KQYacioCVhH+Ug0NORam+ravAr6Cwo56uoZ2soJSf
lpOdlZKclJCakoaLh5WumYuij2d4akhUSsLhx8Dfxb/exL7dw73bwrzawbjWvXWIeLzZwbvYwLrX
v7nWvnqNfbnVvrLLtrHJtbDItKzDsK7Fsqi7q6e6qqa4qaS2p6O1pqGypJWhl5ikmoqQi1FfU8Li
x8HhxsDgxaO+p5y2oFVjV01aT7PQt63JsafCq5+5o4OYhl5tYCsyLLvYv77bwrnUvbjTvLfSu7TO
uLLMtrbQuqi8q5upnZ2rn5ixm5KqlTA4MY6lkW+BcTdAOD1HPgUGBQoLCg0ODRMUExgZGCMkIyAh
IDU2Nf7+/v39/fv7+/n5+ff39/X19fPz8/Hx8e/v7+7u7u3t7erq6ujo6Ofn5+bm5uXl5ePj4+Hh
4d/f393d3dzc3Nvb29jY2NfX19bW1tXV1dTU1M/Pz87Ozs3NzczMzMfHx8bGxsPDw8LCwr+/v76+
vr29vbq6urm5ubi4uLe3t7a2tq6urqqqqp+fn3t7e3d3d3R0dG9vb2dnZ2BgYFhYWFBQUElJSUFB
QTk5OTExMSwsLCgoKB4eHhsbGxYWFhAQEAwMDAgICAcHBwQEBAICAgEBAf///6+u+AkAAAEAdFJO
U///////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
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

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://docs.swift.org/swift-book/_images/setEulerDiagram_2x.png

iVBORw0KGgoAAAANSUhEUgAABE8AAAKHCAIAAAD/q/GjAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
bWFnZVJlYWR5ccllPAAAAyhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMDE0IDc5LjE1
Njc5NywgMjAxNC8wOC8yMC0wOTo1MzowMiAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTQgKE1hY2ludG9zaCkiIHhtcE1NOklu
c3RhbmNlSUQ9InhtcC5paWQ6RDg4OEFDMDhCNjE2MTFFNEEzRDg4MzNBMTdDQkM1MkQiIHhtcE1N
OkRvY3VtZW50SUQ9InhtcC5kaWQ6RDg4OEFDMDlCNjE2MTFFNEEzRDg4MzNBMTdDQkM1MkQiPiA8
eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpEQzA3NkM3RkI2MTUx
MUU0QTNEODgzM0ExN0NCQzUyRCIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpEQzA3NkM4MEI2
MTUxMUU0QTNEODgzM0ExN0NCQzUyRCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8
L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PmQw4wEAAL2oSURBVHja7N13bBzbnid2VlV3
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

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f436.png

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
LNQA5cwAAAAASUVORK5CYII=

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f431.png

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
YII=

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f42e.png

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

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f414.png

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

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f411.png

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
gg==

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f426.png

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

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: chrome-extension://cahedbegdkagmcjfolhdlechbkeaieki/images/apple/1f42d.png

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
OgAAAABJRU5ErkJggg==

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: chrome-extension://noojglkidnpfjbincgijbaiedldjfbhh/data/shared/img/buffer-hover-icon@2x.png

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

------MultipartBoundary--SSWJWIIYhhjAc6KucT1DiiwXZ8IoINyi7rMI1peCuG------
